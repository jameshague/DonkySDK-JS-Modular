/*!
 * DonkyAccount JavaScript Library v1.0.0.0
 *
 * Copyright (C) Dynmark. All rights reserved.
 *
 */
;var DonkyAccount=(function(){var a,b=null;var c={tokenExpiryCheckInterval:10000};function d(f){if(typeof a!="undefined"){return a}if(f===undefined||f===null){throw new Error("no options specified")}if(f.donkyCore===undefined){throw new Error("donkyCore not specified")}b=f.donkyCore;a=this;setInterval(function(){a._checkToken(function(){})},c.tokenExpiryCheckInterval);return a}d.prototype._getBrowserInfo=function(){var g=navigator.userAgent,f,h=g.match(/(opera|chrome|safari|firefox|msie|trident(?=\/))\/?\s*(\d+)/i)||[];if(/trident/i.test(h[1])){f=/\brv[ :]+(\d+)/g.exec(g)||[];return"IE "+(f[1]||"")}if(h[1]==="Chrome"){f=g.match(/\bOPR\/(\d+)/);if(f!=null){return"Opera "+f[1]}}h=h[2]?[h[1],h[2]]:[navigator.appName,navigator.appVersion,"-?"];if((f=g.match(/version\/(\d+)/i))!=null){h.splice(1,1,f[1])}return h.join(" ")};d.prototype._checkToken=function(m,h){if(!a._isSuspended()||h===true){var l=b.donkyData.get("accessDetails");if(l!==null&&l!==undefined){var g=new Date(l.expiresOn);var i=new Date();var j=false;if(g>i){var f=Math.abs(i.getTime()-g.getTime());var k=Math.ceil(f/1000);if(k<60){j=true}b.donkyLogging.debugLog("Token expires in "+k+" seconds"+(j?" (refreshing)":""))}else{b.donkyLogging.debugLog("Token expired");j=true}if(j){this._refreshToken(m)}else{m({succeeded:true})}}else{b.donkyLogging.warnLog("no accessDetails to check");m({succeeded:true})}}else{m({succeeded:false})}};d.prototype._refreshToken=function(i){if(!b._isFunction(i)){throw new Error("resultHandler not supplied")}var h=false;var f=b.donkyNetwork._getSignalRState();if(f==b.donkyNetwork.signalrStatuses.initializing||f==b.donkyNetwork.signalrStatuses.starting||f==b.donkyNetwork.signalrStatuses.started){b.donkyNetwork._stopSignalR();h=true}var g={networkId:b.donkyData.get("networkId"),deviceSecret:b.donkyData.get("secret"),operatingSystem:"Web",sdkVersion:b.version()};b.donkyNetwork.ajax(g,"POST",b.donkyNetwork.api.anonymous,"authentication/gettoken",function(j){if(j.succeeded){b.donkyLogging.debugLog("Succesfully refreshed authorization token");b.donkyData.set("configuration",j.response.configuration);delete j.response.configuration;b.donkyData.set("accessDetails",j.response);b.donkyData.remove("isSuspended");if(h){b.donkyNetwork._startSignalR()}i({succeeded:true})}else{b.donkyLogging.warnLog("Failed to  refresh authorization token");if(j.statusCode===401){b.donkyLogging.warnLog("Can't refresh token - have I been deleted ?");var k=a.getRegistrationDetails();a._register(k,function(l){if(h){b.donkyNetwork._startSignalR()}i(l)})}else{if(j.statusCode===403){b.donkyLogging.warnLog("Can't refresh token - have been suspended");b.donkyData.set("isSuspended",true)}}if(j.statusCode!==401){i({succeeded:false,result:j})}}})};d.prototype._getDeviceId=function(){var f=b.donkyData.get("deviceId");if(f===null){f=b._uuid();b.donkyData.set("deviceId",f);b.donkyData.set("secret",b._uuid())}return f};d.prototype.isRegistered=function(){try{return b.donkyData.get("networkId")!==null}catch(f){b.donkyLogging.errorLog("caught exception in isRegistered() : "+f);return false}};function e(g){var f={id:a._getDeviceId(),secret:b.donkyData.get("secret"),operatingSystem:"Web",operatingSystemVersion:navigator.userAgent,model:a._getBrowserInfo()};return b._extend(g,f)}d.prototype._register=function(f,h){if(!b._isFunction(h)){throw new Error("resultHandler not supplied")}if(f.deviceDetails===undefined){f.deviceDetails={}}var g={device:f.deviceDetails,user:f.userDetails,client:{sdkVersion:b.version(),moduleVersions:b._moduleVersions,appVersion:f.appVersion,currentLocalTime:new Date().toISOString()}};e(g.device);b.donkyLogging.debugLog(JSON.stringify(g));b.donkyNetwork.ajax(g,"POST",b.donkyNetwork.api.anonymous,"registration",function(j){if(j.succeeded){b.donkyData.set("networkId",j.response.networkId);b.donkyData.set("configuration",j.response.accessDetails.configuration);delete j.response.accessDetails.configuration;b.donkyData.set("accessDetails",j.response.accessDetails);var i=g.user!==undefined?g.user:{id:j.response.userId};i.isAnonymous=g.user===undefined;if(i.displayName===undefined){i.displayName=j.response.userId}delete g.device.id;delete g.device.secret;b.donkyData.set("userDetails",i);b.donkyData.set("deviceDetails",g.device);b.donkyData.set("clientDetails",g.client);b.publishLocalEvent({type:"RegistrationChanged",data:{userDetails:i,deviceDetails:g.device}})}h(j)})};d.prototype.getRegistrationDetails=function(){try{return{userDetails:b.donkyData.get("userDetails"),deviceDetails:b.donkyData.get("deviceDetails")}}catch(f){b.donkyLogging.errorLog("caught exception in getRegistrationDetails() : "+f);return null}};d.prototype.getDevice=function(){try{var f=b.donkyData.get("deviceDetails");if(f==null){f={operatingSystem:"Web",operatingSystemVersion:navigator.userAgent,model:a._getBrowserInfo()}}return f}catch(g){b.donkyLogging.errorLog("caught exception in getDevice() : "+g);return null}};d.prototype._getClient=function(){return b.donkyData.get("clientDetails")};d.prototype.updateRegistrationDetails=function(g,f){try{if(!b._isFunction(f)){throw new Error("callback not supplied")}if(g===undefined||g===null){throw new Error("settings not supplied")}if(g.userDetails!==undefined&&g.deviceDetails!==undefined){a._updateRegistrationDetails(g,f)}else{if(g.userDetails!==undefined){a.updateUserDetails(g.userDetails,f)}else{if(g.deviceDetails!==undefined){a.updateDeviceDetails(g.deviceDetails,f)}else{throw new Error("neither userDetails or deviceDetails specified - must specify at least 1")}}}}catch(h){b.donkyLogging.errorLog("caught exception in updateRegistrationDetails() : "+h)}};d.prototype.replaceRegistration=function(g,f){try{b.donkyNetwork.synchronise(function(){a._register(g,function(i){f(i)})})}catch(h){b.donkyLogging.errorLog("caught exception in replaceRegistration() : "+h)}};d.prototype._updateRegistrationDetails=function(g,h){var f={user:g.userDetails,device:g.deviceDetails};e(f.device);b.donkyNetwork.ajax(f,"PUT",b.donkyNetwork.api.secure,"registration",function(i){if(i.succeeded){b.donkyData.set("userDetails",f.user);delete f.device.id;delete f.device.secret;b.donkyData.set("deviceDetails",f.device)}h(i)})};d.prototype.updateUserDetails=function(h,g){try{if(h===undefined){throw new Error("userDetails not supplied")}if(!b._isFunction(g)){throw new Error("callback not supplied")}b.donkyNetwork.ajax(h,"PUT",b.donkyNetwork.api.secure,"registration/user",function(i){if(i.succeeded){b.donkyData.set("userDetails",h)}g(i)})}catch(f){b.donkyLogging.errorLog("caught exception in updateUserDetails() : "+f)}};d.prototype.updateDeviceDetails=function(f,h){try{if(f===undefined){throw new Error("deviceDetails not supplied")}if(!b._isFunction(h)){throw new Error("callback not supplied")}e(f);b.donkyNetwork.ajax(f,"PUT",b.donkyNetwork.api.secure,"registration/device",function(i){if(i.succeeded){delete f.id;delete f.secret;b.donkyData.set("deviceDetails",f)}h(i)})}catch(g){b.donkyLogging.errorLog("caught exception in updateDeviceDetails() : "+g)}};d.prototype._updateClient=function(f,h){try{if(!b._isFunction(h)){throw new Error("callback not supplied")}b.donkyNetwork.ajax(f,"PUT",b.donkyNetwork.api.secure,"registration/client",function(i){if(i.succeeded){b.donkyData.set("clientDetails",f)}h(i)})}catch(g){b.donkyLogging.errorLog("caught exception in _updateClient() : "+g)}};d.prototype._isSuspended=function(){var f=b.donkyData.get("isSuspended");return f!==null?f:false};d.prototype.getTags=function(g){try{if(!b._isFunction(g)){throw new Error("callback not supplied")}b.donkyNetwork.ajax(null,"GET",b.donkyNetwork.api.secure,"registration/user/tags",function(h){g(h)})}catch(f){b.donkyLogging.errorLog("caught exception in getTags() : "+f)}};d.prototype.putTags=function(f,h){try{if(!b._isFunction(h)){throw new Error("callback not supplied")}b.donkyNetwork.ajax(f,"PUT",b.donkyNetwork.api.secure,"registration/user/tags",function(i){h(i)})}catch(g){b.donkyLogging.errorLog("caught exception in putTags() : "+g)}};return d})();