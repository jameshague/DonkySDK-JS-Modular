/*!
 * DonkyCore JavaScript Library
 *
 * Copyright (C) Donky Networks Ltd. All rights reserved.
 *
 */
;var DonkyCore=(function(){var h;var g=[];var c=[];var f=[];var e=[];var a={};i.prototype._extend=function(){for(var k=1;k<arguments.length;k++){for(var j in arguments[k]){if(arguments[k].hasOwnProperty(j)){arguments[0][j]=arguments[k][j]}}}return arguments[0]};i.prototype._isFunction=function(j){var k={};return j&&k.toString.call(j)==="[object Function]"};i.prototype._isArray=function(j){return Object.prototype.toString.call(j)==="[object Array]"};i.prototype._each=function(n,o){var m,k=0,l=n.length,j=h._isArray(n);if(j){for(;k<l;k++){m=o.call(n[k],k,n[k]);if(m===false){break}}}else{for(k in n){m=o.call(n[k],k,n[k]);if(m===false){break}}}return n};i.prototype._uuid=function(){var j="xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(m){var l=Math.random()*16|0,k=m=="x"?l:(l&3|8);return k.toString(16)});return j};function i(){if(typeof h!="undefined"){return h}h=this;h.registerModule({name:"donkyCore",version:h.version()});i.prototype.donkyData=new DonkyData({donkyCore:h});i.prototype.donkyLogging=new DonkyLogging({donkyCore:h});i.prototype.donkyNetwork=new DonkyNetwork({donkyCore:h});i.prototype.donkyAccount=new DonkyAccount({donkyCore:h});h.subscribeToDonkyNotifications({name:"donkyCore",version:h.version()},{notificationType:"TransmitDebugLog",handler:function(j){h.donkyLogging.debugLog("TransmitDebugLog : "+JSON.stringify(j));h._queueAcknowledgement(j,"Delivered");h.submitLog()}},true);return h}i.prototype._dateDiff=function(j,l){var k=l-j;if(isNaN(k)){return NaN}return{milliSeconds:k,seconds:Math.floor(k/1000),minutes:Math.floor(k/(1000*60)),hours:Math.floor(k/(1000*60*60)),days:Math.floor(k/(1000*60*60*24))}};i.prototype._versionCompare=function(q,p,j){var o=j&&j.lexicographical,n=q.split("."),l=p.split(".");function m(r){return(o?/^\d+[A-Za-z]*$/:/^\d+$/).test(r)}if(!n.every(m)||!l.every(m)){return NaN}while(n.length<l.length){n.push("0")}while(l.length<n.length){l.push("0")}if(!o){n=n.map(Number);l=l.map(Number)}for(var k=0;k<n.length;++k){if(l.length==k){return 1}if(n[k]==l[k]){continue}else{if(n[k]>l[k]){return 1}else{return -1}}}if(n.length!=l.length){return -1}return 0};i.prototype._isPendingNotifications=function(){var j=h.donkyData.get("PendingClientNotifications");return j!==null&&j!==undefined&&h._isArray(j)&&j.length>0};i.prototype._getClientNotificationsToExecute=function(){var j=h.donkyData.get("PendingClientNotifications");var l=h.donkyData.get("ExecutingClientNotifications");var k=[];if(l!==null){k=l}if(j!==null){k=k.concat(j)}h.donkyData.set("ExecutingClientNotifications",k);h.donkyData.remove("PendingClientNotifications");h.donkyLogging.infoLog("_getClientNotificationsToExecute() : "+JSON.stringify(k));return k};i.prototype._queueAcknowledgement=function(l,j){var k={type:"Acknowledgement",acknowledgementDetail:{serverNotificationId:l.id,result:j,sentTime:new Date().toISOString(),type:l.type,customNotificationType:l.type==="Custom"?l.data.customType:undefined}};h.queueClientNotifications(k)};i.prototype._processServerNotifications=function(j){h._each(j,function(l,p){var m=p.type=="Custom";var o=false;var n=false;var k=m?c:g;if(m){h._queueAcknowledgement(p,"Delivered");o=true}h._each(k,function(q,r){try{if(((m&&r.notificationType==p.data.customType)||r.notificationType==p.type)&&!r.removed){r.handler(p);o=true;if(r.autoAcknowledge){n=true}}}catch(s){h.donkyLogging.errorLog("Caught exception processing Message: "+p.type);o=false}});if(!o){h.donkyLogging.warnLog("Message: "+p.type+" not handled")}if(!m&&(!o||n)){h._queueAcknowledgement(p,o?"Delivered":"DeliveredNoSubscription")}})};i.prototype._processSentClientNotifications=function(j){h._each(j,function(k,l){h._each(f,function(m,n){if(n.notificationType==l.type&&!n.removed){n.handler(l)}})})};i.prototype.queueContentNotifications=function(k){try{var j=[];if(h._isArray(k)){h._each(k,function(m,n){j.push({type:"SendContent",definition:n})})}else{j.push({type:"SendContent",definition:k})}h.queueClientNotifications(j)}catch(l){h.donkyLogging.errorLog("caught exception in queueCustomNotifications() : "+l)}};i.prototype.sendContentNotifications=function(j,k){try{h.queueContentNotifications(j);h.donkyNetwork.synchronise(k)}catch(l){h.donkyLogging.errorLog("caught exception in sendContentNotifications() : "+l)}};i.prototype.createContentNotificationForSpecifiedUsers=function(n,m,j){try{var l={audience:{type:"SpecifiedUsers",users:[]},content:{type:"Custom",customType:m,data:j},filters:[]};if(h._isArray(n)){h._each(n,function(p,o){l.audience.users.push({userId:o})})}else{l.audience.users.push({userId:n})}return l}catch(k){h.donkyLogging.errorLog("caught exception in formatContentNotification() : "+k);return null}};i.prototype.queueClientNotifications=function(k){try{h.donkyLogging.infoLog("queueClientNotification: "+JSON.stringify(k));var j=h.donkyData.get("PendingClientNotifications");if(j===null||j===undefined){j=[]}if(h._isArray(k)){h._each(k,function(m,n){j.push(n)})}else{j.push(k)}h.donkyData.set("PendingClientNotifications",j)}catch(l){h.donkyLogging.errorLog("caught exception in queueClientNotifications() : "+l)}};i.prototype._compareDictionaries=function(k,j){var l=true;if(k===undefined&&j===undefined){}else{if(k!==undefined&&j!==undefined){if(Object.keys(k).length==Object.keys(j).length){h._each(k,function(m,n){if(n!=j[m]){l=false}return l})}else{l=false}}else{if(k!==undefined||j!==undefined){l=false}}}return l};i.prototype._updateClientInfoIfChanged=function(){var j=h.donkyAccount._getClient();if(j!==null&&j!==undefined){if(!h._compareDictionaries(j.moduleVersions,h._moduleVersions)){h.donkyLogging.debugLog("moduleVersions different - updating network ...");j.moduleVersions=h._moduleVersions;j.currentLocalTime=new Date().toISOString();h.donkyAccount._updateClient(j,function(k){if(k.succeeded){h.donkyLogging.debugLog("moduleVersions succesfully updated")}else{h.donkyLogging.errorLog("Failed to update moduleVersions")}})}}};i.prototype._hasUserDetailsChanged=function(k){var j=h.donkyAccount.getRegistrationDetails();return(k.id!=j.userDetails.id||k.displayName!=j.userDetails.displayName||k.firstName!=j.userDetails.firstName||k.lastName!=j.userDetails.lastName||k.emailAddress!=j.userDetails.emailAddress||k.countryCode!=j.userDetails.countryCode||k.phoneNumber!=j.userDetails.phoneNumber||!h._compareDictionaries(k.additionalProperties,j.userDetails.additionalProperties))};i.prototype._hasDeviceDetailsChanged=function(j){var k=h.donkyAccount.getRegistrationDetails();return(j.type!=k.deviceDetails.type||j.name!=k.deviceDetails.name||!h._compareDictionaries(j.additionalProperties,k.deviceDetails.additionalProperties))};i.prototype._initialize=function(k){if(k.userDetails!==undefined||k.deviceDetails!==undefined){h._updateClientInfoIfChanged();var j={};if(k.deviceDetails!==undefined&&h._hasDeviceDetailsChanged(k.deviceDetails)){j.deviceDetails=k.deviceDetails}if(k.userDetails!==undefined&&h._hasUserDetailsChanged(k.userDetails)){j.userDetails=k.userDetails}if(j.deviceDetails!==undefined||j.userDetails!==undefined){h.donkyAccount.updateRegistrationDetails(j,function(l){if(l.succeeded){h.publishLocalEvent({type:"DonkyInitialised",data:{}})}k.resultHandler(l)})}else{h.publishLocalEvent({type:"DonkyInitialised",data:{}});k.resultHandler({succeeded:true})}}else{h.publishLocalEvent({type:"DonkyInitialised",data:{}});k.resultHandler({succeeded:true})}};i.prototype.initialise=function(j){try{if(j===undefined||j===null){throw new Error("no options specified")}if(j.apiKey===undefined){h.donkyLogging.warnLog("No apiKey specified");throw new Error("apiKey not specified")}if(!h._isFunction(j.resultHandler)){h.donkyLogging.warnLog("No ResultHandler specified");throw new Error("resultHandler not specified")}var l=h.donkyData.get("apiKey");if(l!==null&&l!==j.apiKey){h.donkyData.remove("networkId")}if(j.useSignalR===false){h.donkyNetwork._useSignalR(false)}else{h.donkyNetwork._useSignalR(true)}h.donkyData.set("apiKey",j.apiKey);h.donkyData.set("environment",j.environment!==undefined?j.environment:"");h.donkyData.set("scheme",j.scheme!==undefined?j.scheme:"https://");if(!h.donkyAccount.isRegistered()){h.donkyAccount._register(j,function(m){if(m.succeeded){h.publishLocalEvent({type:"DonkyInitialised",data:{}})}j.resultHandler(m)})}else{h.donkyAccount._checkToken(function(m){if(m.succeeded){h._initialize(j)}else{j.resultHandler(m)}},true)}}catch(k){h.donkyLogging.errorLog("caught exception in initialise() : "+k);if(j!==undefined&&h._isFunction(j.resultHandler)){j.resultHandler({succeeded:false})}}};function b(k,m,j,l){if(h._isArray(m)){h._each(m,function(n,o){o.autoAcknowledge=l===undefined?true:l;j.push(o)})}else{m.autoAcknowledge=l===undefined?true:l;j.push(m)}h.registerModule(k)}function d(k,m,j){var l=h._isArray(m)?m:[m];h._each(l,function(n,q){for(var o=j.length-1;o>=0;o--){var p=j[o];if(p.notificationType===q.notificationType&&p.handler===q.handler){p.removed=true}}})}i.prototype.subscribeToDonkyNotifications=function(j,m,l){try{b(j,m,g,l)}catch(k){h.donkyLogging.errorLog("caught exception in subscribeToDonkyNotifications() : "+k)}};i.prototype.subscribeToContentNotifications=function(j,l){try{b(j,l,c)}catch(k){h.donkyLogging.errorLog("caught exception in subscribeToContentNotifications() : "+k)}};i.prototype.unsubscribeFromContentNotifications=function(j,l){try{d(j,l,c)}catch(k){h.donkyLogging.errorLog("caught exception in unsubscribeFromContentNotifications() : "+k)}};i.prototype.unsubscribeFromDonkyNotifications=function(j,l){try{d(j,l,g)}catch(k){h.donkyLogging.errorLog("caught exception in unsubscribeFromDonkyNotifications() : "+k)}};i.prototype.subscribeToOutboundNotifications=function(j,l){try{if(h._isArray(l)){h._each(l,function(m,n){f.push(n)})}else{f.push(l)}h.registerModule(j)}catch(k){h.donkyLogging.errorLog("caught exception in subscribeToOutboundNotifications() : "+k)}};i.prototype.unsubscribeFromOutboundNotifications=function(j,l){try{d(j,l,f)}catch(k){h.donkyLogging.errorLog("caught exception in unsubscribeFromOutboundNotifications() : "+k)}};i.prototype.publishLocalEvent=function(j){try{var l=false;h._each(e,function(n,m){if(m.eventType==j.type&&m.removed!==true){try{m.handler(j);l=true}catch(o){h.donkyLogging.warnLog("caught exception in local event handler() : "+o)}}});if(!l){}}catch(k){h.donkyLogging.warnLog("caught exception in publishLocalEvent() : "+k)}};i.prototype.subscribeToLocalEvent=function(j,k){try{e.push({eventType:j,handler:k})}catch(l){h.donkyLogging.errorLog("caught exception in subscribeToLocalEvent() : "+l)}};i.prototype.unsubscribeFromLocalEvent=function(k,m){try{var o=false;for(var j=e.length-1;j>=0;j--){var l=e[j];if(l.eventType===k&&l.handler===m){l.removed=true;o=true;h.donkyLogging.debugLog("unsubscribeToEvent() succeeded")}}if(!o){h.donkyLogging.warnLog("unsubscribeToEvent() failed")}}catch(n){h.donkyLogging.errorLog("caught exception in unsubscribeFromLocalEvent() : "+n)}};i.prototype.formatAssetUrl=function(k){try{var l=h.donkyData.get("configuration");return l.configurationItems.AssetDownloadUrlFormat.replace("{0}",k)}catch(j){h.donkyLogging.errorLog("caught exception in formatAssetUrl() : "+j);return null}};i.prototype.formatAssetDownloadUrl=function(m,k){try{var n=h.donkyData.get("configuration");var j=n.configurationItems.AssetDownloadNamedFileUrlFormat.replace("{0}",m);return j.replace("{1}",k)}catch(l){h.donkyLogging.errorLog("caught exception in formatAssetDownloadUrl() : "+l);return null}};i.prototype.registerService=function(k,j){try{if(a[k]!==undefined){h.donkyLogging.warnLog("registerService("+k+") - overwriting an existing instance")}else{h.donkyLogging.debugLog("registerService("+k+")")}a[k]=j}catch(l){h.donkyLogging.errorLog("caught exception in registerService() : "+l)}};i.prototype.getService=function(j){try{if(a[j]!==undefined){h.donkyLogging.debugLog("getService("+j+")");return a[j]}else{h.donkyLogging.warnLog("getService("+j+") - service not available");return null}}catch(k){h.donkyLogging.errorLog("caught exception in getService() : "+k);return null}};i.prototype.unregisterService=function(j){try{if(a[j]!==undefined){h.donkyLogging.debugLog("unregisterService("+j+")");delete a[j]}else{h.donkyLogging.warnLog("unregisterService("+j+") - service not available")}}catch(k){h.donkyLogging.errorLog("caught exception in unregisterService() : "+k)}};i.prototype._moduleVersions={};i.prototype.registerModule=function(j){try{if(h._moduleVersions[j.name]!==undefined){if(h._moduleVersions[j.name]!=j.version){h._moduleVersions[j.name]=j.version}}else{h._moduleVersions[j.name]=j.version}}catch(k){h.donkyLogging.errorLog("caught exception in registerModule() : "+k)}};i.prototype.isModuleRegistered=function(j,k){try{var m=false;if(h._moduleVersions[j]!==undefined){if(k===undefined){m=true}else{m=h._versionCompare(k,h._moduleVersions[j])<=0}}return m}catch(l){h.donkyLogging.errorLog("caught exception in isModuleRegistered() : "+l);return false}};i.prototype.getRegisteredModules=function(){try{var j=[];h._each(h._moduleVersions,function(m,l){j.push({name:m,version:l})});return j}catch(k){h.donkyLogging.errorLog("caught exception in getRegisteredModules() : "+k);return false}};i.prototype._submitLog=function(n,m){var k=h.donkyData.get("lastSubmitLogTimestamp");if(k!==null){var j=h._dateDiff(new Date(k),new Date());if(j.seconds<30){h.donkyLogging.warnLog("_submitLog() submitting too frequently");if(h._isFunction(m)){m({succeeded:false})}}}if(h.donkyAccount.isRegistered()&&!h.donkyAccount._isSuspended()){var l=h.donkyLogging.getLog();if(l!==""){h.donkyNetwork.ajax({data:l,submissionReason:n},"POST",h.donkyNetwork.api.secure,"debuglog",function(o){h.donkyData.set("lastSubmitLogTimestamp",new Date().toISOString());if(o.succeeded){h.donkyLogging.clearLog();if(!o.response.alwaysSubmitErrors){h.donkyLogging.debugLog("_submitLog() spamming - network has set alwaysSubmitErrors to false");var p=h.donkyData.get("configuration");if(p!==null&&p!==undefined){if(p.configurationItems!==undefined){p.configurationItems.AlwaysSubmitErrors="false";h.donkyData.set("configuration",p);h.donkyLogging.debugLog("updated alwaysSubmitErrors to false")}}}if(h._isFunction(m)){m(o)}}})}else{if(h._isFunction(m)){m({succeeded:true})}}}else{if(h._isFunction(m)){m({succeeded:false})}}};i.prototype.submitLog=function(k){try{h._submitLog("ManualRequest",k)}catch(j){h.donkyLogging.errorLog("caught exception in submitLog() : "+j)}};i.prototype.version=function(){return"2.0.0.0"};return i})();(function(){var a=function(){return new DonkyCore()};if(typeof define==="function"&&define.amd){define("donkyCore",["donkyData","donkyAccount","donkyLogging","donkyNetwork"],a)}else{window.donkyCore=a()}}());