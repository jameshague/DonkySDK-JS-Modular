/*!
 * DonkyCore JavaScript Library
 *
 * Copyright (C) Donky Networks Ltd. All rights reserved.
 *
 */
;var DonkyCore=(function(){var i;var h=[];var c=[];var f=[];var e=[];var a={};j.prototype._extend=function(){for(var l=1;l<arguments.length;l++){for(var k in arguments[l]){if(arguments[l].hasOwnProperty(k)){arguments[0][k]=arguments[l][k]}}}return arguments[0]};j.prototype._isFunction=function(k){var l={};return k&&l.toString.call(k)==="[object Function]"};j.prototype._isArray=function(k){return Object.prototype.toString.call(k)==="[object Array]"};j.prototype._each=function(o,p){var n,l=0,m=o.length,k=i._isArray(o);if(k){for(;l<m;l++){n=p.call(o[l],l,o[l]);if(n===false){break}}}else{for(l in o){n=p.call(o[l],l,o[l]);if(n===false){break}}}return o};j.prototype._uuid=function(){var k="xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(n){var m=Math.random()*16|0,l=n=="x"?m:(m&3|8);return l.toString(16)});return k};function j(){if(typeof i!="undefined"){return i}i=this;i.registerModule({name:"donkyCore",version:i.version()});j.prototype.donkyData=new DonkyData({donkyCore:i});j.prototype.donkyLogging=new DonkyLogging({donkyCore:i});j.prototype.donkyNetwork=new DonkyNetwork({donkyCore:i});j.prototype.donkyAccount=new DonkyAccount({donkyCore:i});i.subscribeToDonkyNotifications({name:"donkyCore",version:i.version()},{notificationType:"TransmitDebugLog",handler:function(k){i.donkyLogging.debugLog("TransmitDebugLog : "+JSON.stringify(k));i._queueAcknowledgement(k,"Delivered");i.submitLog()}},true);i.subscribeToLocalEvent("DonkyInitialised",function(k){i._updateClientInfoIfChanged()});return i}j.prototype._dateDiff=function(k,m){var l=m-k;if(isNaN(l)){return NaN}return{milliSeconds:l,seconds:Math.floor(l/1000),minutes:Math.floor(l/(1000*60)),hours:Math.floor(l/(1000*60*60)),days:Math.floor(l/(1000*60*60*24))}};j.prototype._versionCompare=function(r,q,k){var p=k&&k.lexicographical,o=r.split("."),m=q.split(".");function n(s){return(p?/^\d+[A-Za-z]*$/:/^\d+$/).test(s)}if(!o.every(n)||!m.every(n)){return NaN}while(o.length<m.length){o.push("0")}while(m.length<o.length){m.push("0")}if(!p){o=o.map(Number);m=m.map(Number)}for(var l=0;l<o.length;++l){if(m.length==l){return 1}if(o[l]==m[l]){continue}else{if(o[l]>m[l]){return 1}else{return -1}}}if(o.length!=m.length){return -1}return 0};j.prototype._isPendingNotifications=function(){var k=i.donkyData.get("PendingClientNotifications");return k!==null&&k!==undefined&&i._isArray(k)&&k.length>0};j.prototype._getPendingNotificationsLength=function(){var l=i.donkyData.getString("PendingClientNotifications");var k=0;if(l!==null&&l!==undefined){k=l.length}return k};j.prototype._getClientNotificationsToExecute=function(){var k=i.donkyData.get("PendingClientNotifications");var m=i.donkyData.get("ExecutingClientNotifications");var l=[];if(m!==null){l=m}if(k!==null){l=l.concat(k)}i.donkyData.set("ExecutingClientNotifications",l);i.donkyData.remove("PendingClientNotifications");i.donkyLogging.infoLog("_getClientNotificationsToExecute() : "+JSON.stringify(l));return l};j.prototype._queueAcknowledgement=function(m,k){var l={type:"Acknowledgement",acknowledgementDetail:{serverNotificationId:m.id,result:k,sentTime:new Date().toISOString(),type:m.type,customNotificationType:m.type==="Custom"?m.data.customType:undefined}};i.queueClientNotifications(l)};j.prototype._processServerNotifications=function(k){i._each(k,function(m,q){var n=q.type=="Custom";var p=false;var o=false;var l=n?c:h;if(n){i._queueAcknowledgement(q,"Delivered");p=true}i._each(l,function(r,s){try{if(((n&&s.notificationType==q.data.customType)||s.notificationType==q.type)&&!s.removed){s.handler(q);p=true;if(s.autoAcknowledge){o=true}}}catch(t){i.donkyLogging.errorLog("Caught exception processing Message: "+q.type);p=false}});if(!p){i.donkyLogging.warnLog("Message: "+q.type+" not handled")}if(!n&&(!p||o)){i._queueAcknowledgement(q,p?"Delivered":"DeliveredNoSubscription")}})};j.prototype._processPendingClientNotifications=function(k){i._each(k,function(l,m){i._each(f,function(n,o){if(o.notificationType==m.type&&!o.removed){o.handler(m)}})})};function g(n){var m=true;if(n.content.data!==null&&n.content.data!==undefined){var p=i.donkyData.get("configuration");var k=parseInt(p.configurationItems.CustomContentMaxSizeBytes);var o=parseInt(p.configurationItems.SignalRMaxMessageSizeBytes);var l=JSON.stringify(n.content.data).length;if(l>o){m=false;i.donkyLogging.debugLog("ContentNotification size too large ("+l+"): max size = "+k)}else{i.donkyLogging.debugLog("ContentNotification size ok ("+l+"): max size = "+k)}}return m}j.prototype.queueContentNotifications=function(m){try{var l=[];var k=[];if(i._isArray(m)){i._each(m,function(o,p){if(g(p)){l.push({type:"SendContent",definition:p})}else{k.push({type:"SendContent",definition:p})}})}else{if(g(m)){l.push({type:"SendContent",definition:m})}else{k.push({type:"SendContent",definition:m})}}if(l.length>0){i.queueClientNotifications(l)}if(k.length>0){return{succeeded:false,failedClientNotifications:k,reason:"The following notifications are too large and have not been processsed"}}else{return{succeeded:true}}}catch(n){i.donkyLogging.errorLog("caught exception in queueCustomNotifications() : "+n)}};j.prototype.sendContentNotifications=function(k,m){try{var l=i.queueContentNotifications(k);if(!l.succeeded){i.donkyLogging.debugLog(l.failedClientNotifications.length+" invalid content notification(s)")}i.donkyNetwork.synchronise(function(o){if(i._isFunction(m)){if(!l.succeeded){o.succeeded=false;i._each(l.failedClientNotifications,function(p,q){o.response.failedClientNotifications.push({notification:{type:"SendContent"},validationFailures:[{property:"data",details:"The data is too large ",failureCode:12004,failureKey:"CustomDataTooLong",notification:q}],failureReason:"ValidationFailure"})})}m(o)}})}catch(n){i.donkyLogging.errorLog("caught exception in sendContentNotifications() : "+n)}};j.prototype.createContentNotificationForSpecifiedUsers=function(o,n,k){try{var m={audience:{type:"SpecifiedUsers",users:[]},content:{type:"Custom",customType:n,data:k},filters:[]};if(i._isArray(o)){i._each(o,function(q,p){m.audience.users.push({userId:p})})}else{m.audience.users.push({userId:o})}return m}catch(l){i.donkyLogging.errorLog("caught exception in formatContentNotification() : "+l);return null}};j.prototype.queueClientNotifications=function(l){try{i.donkyLogging.infoLog("queueClientNotification: "+JSON.stringify(l));var k=i.donkyData.get("PendingClientNotifications");if(k===null||k===undefined){k=[]}if(i._isArray(l)){i._each(l,function(n,o){k.push(o)})}else{k.push(l)}i.donkyData.set("PendingClientNotifications",k)}catch(m){i.donkyLogging.errorLog("caught exception in queueClientNotifications() : "+m)}};j.prototype._compareDictionaries=function(l,k){var m=true;if(l===undefined&&k===undefined){}else{if(l!==undefined&&k!==undefined){if(Object.keys(l).length==Object.keys(k).length){i._each(l,function(n,o){if(o!=k[n]){m=false}return m})}else{m=false}}else{if(l!==undefined||k!==undefined){m=false}}}return m};j.prototype._updateClientInfoIfChanged=function(){var k=i.donkyAccount._getClient();if(k!==null&&k!==undefined){if(!i._compareDictionaries(k.moduleVersions,i._moduleVersions)){i.donkyLogging.debugLog("moduleVersions different - updating network ...");k.moduleVersions=i._moduleVersions;k.currentLocalTime=new Date().toISOString();i.donkyAccount._updateClient(k,function(l){if(l.succeeded){i.donkyLogging.debugLog("moduleVersions succesfully updated")}else{i.donkyLogging.errorLog("Failed to update moduleVersions")}})}}};j.prototype._hasUserDetailsChanged=function(l){var k=i.donkyAccount.getRegistrationDetails();return(l.id!=k.userDetails.id||l.displayName!=k.userDetails.displayName||l.firstName!=k.userDetails.firstName||l.lastName!=k.userDetails.lastName||l.emailAddress!=k.userDetails.emailAddress||l.countryCode!=k.userDetails.countryCode||l.phoneNumber!=k.userDetails.phoneNumber||!i._compareDictionaries(l.additionalProperties,k.userDetails.additionalProperties))};j.prototype._hasDeviceDetailsChanged=function(k){var l=i.donkyAccount.getRegistrationDetails();return(k.type!=l.deviceDetails.type||k.name!=l.deviceDetails.name||!i._compareDictionaries(k.additionalProperties,l.deviceDetails.additionalProperties))};j.prototype._initialize=function(l){if(l.userDetails!==undefined||l.deviceDetails!==undefined){var k={};if(l.deviceDetails!==undefined&&i._hasDeviceDetailsChanged(l.deviceDetails)){k.deviceDetails=l.deviceDetails}if(l.userDetails!==undefined&&i._hasUserDetailsChanged(l.userDetails)){k.userDetails=l.userDetails}if(k.deviceDetails!==undefined||k.userDetails!==undefined){i.donkyAccount.updateRegistrationDetails(k,function(m){if(m.succeeded){i.publishLocalEvent({type:"DonkyInitialised",data:{}})}l.resultHandler(m)})}else{i.publishLocalEvent({type:"DonkyInitialised",data:{}});l.resultHandler({succeeded:true})}}else{i.publishLocalEvent({type:"DonkyInitialised",data:{}});l.resultHandler({succeeded:true})}};j.prototype.initialise=function(k){try{if(k===undefined||k===null){throw new Error("no options specified")}if(k.apiKey===undefined){i.donkyLogging.warnLog("No apiKey specified");throw new Error("apiKey not specified")}if(!i._isFunction(k.resultHandler)){i.donkyLogging.warnLog("No ResultHandler specified");throw new Error("resultHandler not specified")}var m=i.donkyData.get("apiKey");if(m!==null&&m!==k.apiKey){i.donkyData.remove("networkId")}if(k.useSignalR===false){i.donkyNetwork._useSignalR(false)}else{i.donkyNetwork._useSignalR(true)}i.donkyData.set("apiKey",k.apiKey);i.donkyData.set("environment",k.environment!==undefined?k.environment:"");i.donkyData.set("scheme",k.scheme!==undefined?k.scheme:"https://");if(!i.donkyAccount.isRegistered()){i.donkyAccount._register(k,function(n){if(n.succeeded){i.publishLocalEvent({type:"DonkyInitialised",data:{}})}k.resultHandler(n)})}else{i.donkyAccount._checkToken(function(n){if(n.succeeded){i._initialize(k)}else{k.resultHandler(n)}},true)}}catch(l){i.donkyLogging.errorLog("caught exception in initialise() : "+l);if(k!==undefined&&i._isFunction(k.resultHandler)){k.resultHandler({succeeded:false})}}};function b(l,n,k,m){if(i._isArray(n)){i._each(n,function(o,p){p.autoAcknowledge=m===undefined?true:m;k.push(p)})}else{n.autoAcknowledge=m===undefined?true:m;k.push(n)}i.registerModule(l)}function d(l,n,k){var m=i._isArray(n)?n:[n];i._each(m,function(o,r){for(var p=k.length-1;p>=0;p--){var q=k[p];if(q.notificationType===r.notificationType&&q.handler===r.handler){q.removed=true}}})}j.prototype.subscribeToDonkyNotifications=function(k,n,m){try{b(k,n,h,m)}catch(l){i.donkyLogging.errorLog("caught exception in subscribeToDonkyNotifications() : "+l)}};j.prototype.subscribeToContentNotifications=function(k,m){try{b(k,m,c)}catch(l){i.donkyLogging.errorLog("caught exception in subscribeToContentNotifications() : "+l)}};j.prototype.unsubscribeFromContentNotifications=function(k,m){try{d(k,m,c)}catch(l){i.donkyLogging.errorLog("caught exception in unsubscribeFromContentNotifications() : "+l)}};j.prototype.unsubscribeFromDonkyNotifications=function(k,m){try{d(k,m,h)}catch(l){i.donkyLogging.errorLog("caught exception in unsubscribeFromDonkyNotifications() : "+l)}};j.prototype.subscribeToOutboundNotifications=function(k,m){try{if(i._isArray(m)){i._each(m,function(n,o){f.push(o)})}else{f.push(m)}i.registerModule(k)}catch(l){i.donkyLogging.errorLog("caught exception in subscribeToOutboundNotifications() : "+l)}};j.prototype.unsubscribeFromOutboundNotifications=function(k,m){try{d(k,m,f)}catch(l){i.donkyLogging.errorLog("caught exception in unsubscribeFromOutboundNotifications() : "+l)}};j.prototype.publishLocalEvent=function(k){try{var m=false;i._each(e,function(o,n){if(n.eventType==k.type&&n.removed!==true){try{n.handler(k);m=true}catch(p){i.donkyLogging.warnLog("caught exception in local event handler() : "+p)}}});if(!m){}}catch(l){i.donkyLogging.warnLog("caught exception in publishLocalEvent() : "+l)}};j.prototype.subscribeToLocalEvent=function(k,l){try{e.push({eventType:k,handler:l})}catch(m){i.donkyLogging.errorLog("caught exception in subscribeToLocalEvent() : "+m)}};j.prototype.unsubscribeFromLocalEvent=function(l,n){try{var p=false;for(var k=e.length-1;k>=0;k--){var m=e[k];if(m.eventType===l&&m.handler===n){m.removed=true;p=true;i.donkyLogging.debugLog("unsubscribeToEvent() succeeded")}}if(!p){i.donkyLogging.warnLog("unsubscribeToEvent() failed")}}catch(o){i.donkyLogging.errorLog("caught exception in unsubscribeFromLocalEvent() : "+o)}};j.prototype.formatAssetUrl=function(l){try{var m=i.donkyData.get("configuration");return m.configurationItems.AssetDownloadUrlFormat.replace("{0}",l)}catch(k){i.donkyLogging.errorLog("caught exception in formatAssetUrl() : "+k);return null}};j.prototype.formatAssetDownloadUrl=function(n,l){try{var o=i.donkyData.get("configuration");var k=o.configurationItems.AssetDownloadNamedFileUrlFormat.replace("{0}",n);return k.replace("{1}",l)}catch(m){i.donkyLogging.errorLog("caught exception in formatAssetDownloadUrl() : "+m);return null}};j.prototype.registerService=function(l,k){try{if(a[l]!==undefined){i.donkyLogging.warnLog("registerService("+l+") - overwriting an existing instance")}else{i.donkyLogging.debugLog("registerService("+l+")")}a[l]=k}catch(m){i.donkyLogging.errorLog("caught exception in registerService() : "+m)}};j.prototype.getService=function(k){try{if(a[k]!==undefined){i.donkyLogging.debugLog("getService("+k+")");return a[k]}else{i.donkyLogging.warnLog("getService("+k+") - service not available");return null}}catch(l){i.donkyLogging.errorLog("caught exception in getService() : "+l);return null}};j.prototype.unregisterService=function(k){try{if(a[k]!==undefined){i.donkyLogging.debugLog("unregisterService("+k+")");delete a[k]}else{i.donkyLogging.warnLog("unregisterService("+k+") - service not available")}}catch(l){i.donkyLogging.errorLog("caught exception in unregisterService() : "+l)}};j.prototype._moduleVersions={};j.prototype.registerModule=function(k){try{if(i._moduleVersions[k.name]!==undefined){if(i._moduleVersions[k.name]!=k.version){i._moduleVersions[k.name]=k.version}}else{i._moduleVersions[k.name]=k.version}}catch(l){i.donkyLogging.errorLog("caught exception in registerModule() : "+l)}};j.prototype.isModuleRegistered=function(k,l){try{var n=false;if(i._moduleVersions[k]!==undefined){if(l===undefined){n=true}else{n=i._versionCompare(l,i._moduleVersions[k])<=0}}return n}catch(m){i.donkyLogging.errorLog("caught exception in isModuleRegistered() : "+m);return false}};j.prototype.getRegisteredModules=function(){try{var k=[];i._each(i._moduleVersions,function(n,m){k.push({name:n,version:m})});return k}catch(l){i.donkyLogging.errorLog("caught exception in getRegisteredModules() : "+l);return false}};j.prototype._submitLog=function(o,n){var l=i.donkyData.get("lastSubmitLogTimestamp");if(l!==null){var k=i._dateDiff(new Date(l),new Date());if(k.seconds<30){i.donkyLogging.warnLog("_submitLog() submitting too frequently");if(i._isFunction(n)){n({succeeded:false})}}}if(i.donkyAccount.isRegistered()&&!i.donkyAccount._isSuspended()){var m=i.donkyLogging.getLog();if(m!==""){i.donkyNetwork.ajax({data:m,submissionReason:o},"POST",i.donkyNetwork.api.secure,"debuglog",function(p){i.donkyData.set("lastSubmitLogTimestamp",new Date().toISOString());if(p.succeeded){i.donkyLogging.clearLog();if(!p.response.alwaysSubmitErrors){i.donkyLogging.debugLog("_submitLog() spamming - network has set alwaysSubmitErrors to false");var q=i.donkyData.get("configuration");if(q!==null&&q!==undefined){if(q.configurationItems!==undefined){q.configurationItems.AlwaysSubmitErrors="false";i.donkyData.set("configuration",q);i.donkyLogging.debugLog("updated alwaysSubmitErrors to false")}}}if(i._isFunction(n)){n(p)}}})}else{if(i._isFunction(n)){n({succeeded:true})}}}else{if(i._isFunction(n)){n({succeeded:false})}}};j.prototype.submitLog=function(l){try{i._submitLog("ManualRequest",l)}catch(k){i.donkyLogging.errorLog("caught exception in submitLog() : "+k)}};j.prototype.version=function(){return"2.0.0.1"};return j})();(function(){var a=function(){return new DonkyCore()};if(typeof define==="function"&&define.amd){define("donkyCore",["donkyData","donkyAccount","donkyLogging","donkyNetwork"],a)}else{window.donkyCore=a()}}());