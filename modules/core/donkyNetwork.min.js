/*!
 * DonkyNetwork JavaScript Library
 *
 * Copyright (C) Donky Networks Ltd. All rights reserved.
 *
 */
;var DonkyNetwork=(function(){var m={checkSynchroniseInterval:1000,maxSecondsWithoutSynchronize:5*60,retrySchedule:[5000,5000,30000,30000,60000,120000,300000,300000,300000,300000,300000,300000,300000,300000,300000,600000,600000,600000,600000,600000,600000,900000]};var a;var h=null;var f=0;b.prototype.api={anonymous:"client-api.mobiledonky.com/api/",secure:"client-secure-api-northeurope.mobiledonky.com/api/"};var d={initializing:0,starting:1,started:2,stopping:3,stopped:4,error:5};b.prototype.signalrStatuses=d;var p=false;var o=undefined;var c=false;var q=undefined;var r=undefined;var k=false;var l=d.stopped;var i=null;var g=null;var j=false;var n=true;function e(){if(!h.donkyAccount._isSuspended()){var s=h.donkyData.get("lastSynchroniseTime");if(s!==null){var t=new Date(s);var u=h._dateDiff(t,new Date());if(u.seconds>m.maxSecondsWithoutSynchronize){a.synchronise()}}}}function b(t){if(typeof a!="undefined"){return a}if(t===undefined||t===null){throw new Error("no options specified")}if(t.donkyCore===undefined){throw new Error("donkyCore not specified")}h=t.donkyCore;if(window.jQuery===undefined){throw new Error("jQuery not found")}if(h._versionCompare($.fn.jquery,"1.6.4")<0){throw new Error("jQuery varsion too old - require minimum version of 1.6.4")}if(window.$.signalR===undefined){throw new Error("jQuery not found")}if(h._versionCompare(window.$.signalR.version,"2.2.0")<0){throw new Error("signalR varsion too old - require minimum version of 2.2.0")}a=this;setInterval(function(){e()},m.checkSynchroniseInterval);if(n){h.subscribeToLocalEvent("RegistrationChanged",function(w){if(l==d.initializing||l==d.starting||l==d.started){a._stopSignalR(function(){a._startSignalR()})}});h.subscribeToLocalEvent("DonkyInitialised",function(w){if(!k){a._initSignalR()}else{if(l==d.stopped){a._startSignalR()}}})}var v=h.donkyData.get("configuration");if(v!==null&&v!==undefined&&v.configurationItems!==undefined){if(typeof v.configurationItems.DeviceCommsConnectionRetrySchedule=="string"){var s=v.configurationItems.DeviceCommsConnectionRetrySchedule.split("|");var u=[];h._each(s,function(x,z){var B=z.split(",");if(B.length==2){var w=parseInt(B[0]);var A=B[1]==="*"?1:parseInt(B[1]);for(var y=0;y<A;y++){u.push(w*1000)}}});m.retrySchedule=u}if(n&&typeof v.configurationItems.MaxMinutesWithoutNotificationExchange=="string"){m.maxSecondsWithoutSynchronize=parseInt(v.configurationItems.MaxMinutesWithoutNotificationExchange)*60}}return a}b.prototype.ajax=function(u,t,s,x,w){try{a._ajax(u,t,s,x,function(y){if(!y.succeeded&&y.statusCode!==400&&y.statusCode!==401&&y.statusCode!==403&&y.statusCode!==404&&!h.donkyAccount._isSuspended()&&h.donkyAccount.isRegistered()){h.donkyLogging.debugLog("Retrying ajax call in "+m.retrySchedule[f]+" ms - retryCounter = "+f);setTimeout(function(){a.ajax(u,t,s,x,w)},m.retrySchedule[f]);if(f<m.retrySchedule.length-1){f++}}else{if(y.succeeded){f=0}w(y)}})}catch(v){h.donkyLogging.errorLog("caught exception in ajax() : "+v);w({succeeded:false,statusCode:-1})}};b.prototype._ajax=function(w,z,y,s,A){var u={};if(y===a.api.secure){u.authorization=h.donkyNetwork._getAuthorizationHeader()}else{u.apiKey=h.donkyData.get("apiKey")}var x=h.donkyData.get("environment");var t=h.donkyData.get("scheme");var v=$.ajax({url:t+x+y+s,type:z,beforeSend:function(B){if(u!==null){h._each(u,function(C,D){B.setRequestHeader(C,D)})}},contentType:"application/json",data:w!==null?JSON.stringify(w):undefined,dataType:"json"}).done(function(B){if(B!==null&&B!==undefined){h.donkyLogging.debugLog(JSON.stringify(B))}A({succeeded:true,response:B})}).fail(function(E,B){if(E.readyState==4){var G;var C=null;var D=E.statusCode();switch(D.status){case 400:try{C=JSON.parse(D.responseText)}catch(F){h.donkyLogging.warnLog("failed to parse responseText: "+D.responseText)}G=z+" to  "+y+s+" returned a "+D.status+" (Bad request)\nrequest: "+JSON.stringify(w)+"\nheaders: "+JSON.stringify(u)+"\nresponse: "+JSON.stringify(C);h.donkyLogging.warnLog(G);break;default:G=z+" to  "+y+s+" returned a "+D.status+"\nrequest: "+JSON.stringify(w)+"\nheaders: "+JSON.stringify(u)+"\nresponse: "+D.responseText;h.donkyLogging.warnLog(G);break}A({succeeded:false,response:C,statusCode:D.status})}else{G=z+" to  "+y+s+" failed ("+B+")\nrequest: "+JSON.stringify(w)+"\nheaders: "+JSON.stringify(u);h.donkyLogging.warnLog(G);A({succeeded:false,statusCode:-1})}})};b.prototype._initSignalR=function(){if(i==null){l=d.initializing;var s=h.donkyData.get("accessDetails");i=$.hubConnection(s.signalRUrl,{useDefaultPath:false});i.qs={access_token:s.accessToken};if(h.donkyLogging._getLogLevel()>=h.donkyLogging.logLevel.Info){i.logging=true}g=i.createHubProxy("NetworkHub");g.on("push",function(t){h.donkyLogging.debugLog("Push was called with notifications: "+JSON.stringify(t));h._processServerNotifications(t);if(n){a._synchroniseOverSignalR()}else{a._synchronizeOverREST()}});k=true;a._startSignalR()}else{h.donkyLogging.warnLog("_signalR.init() called twice")}};b.prototype._isSignalRStarted=function(){return l==d.started};b.prototype._getSignalRState=function(){return l};b.prototype._useSignalR=function(s){n=s};b.prototype._startSignalR=function(t){if(i!=null){var s=h.donkyData.get("accessDetails");switch(l){case d.initializing:case d.stopped:i.qs={access_token:s.accessToken};l=d.starting;i.start().done(function(){l=d.started;h.publishLocalEvent({type:"SignalRStarted",data:{}});if(h._isFunction(t)){t()}a._synchroniseOverSignalR(function(){if(r!==undefined){h.donkyLogging.debugLog("syncWhenStartingCallback registered, calling ...");r();r=undefined}if(p===true){h.donkyLogging.debugLog("Entered the started state and found a stop request. stopping ...");p=false;a._stopSignalR(o);o=undefined}})}).fail(function(u){l=d.stopped;h.donkyLogging.warnLog("Connection error: "+u);a._synchronizeOverREST(function(){if(r!==undefined){h.donkyLogging.debugLog("syncWhenStartingCallback registered, calling ...");r();r=undefined}})});break;case d.started:if(h._isFunction(t)){t()}h.donkyLogging.warnLog("_startSignalR() called when already started");break;case d.starting:h.donkyLogging.warnLog("_startSignalR() called when starting");break;case d.stopping:h.donkyLogging.debugLog("_startSignalR() called when stopping - requesting a start when stopped");c=true;q=t;break;default:h.donkyLogging.errorLog("Unknown signalR status: "+l);break}}else{h.donkyLogging.warnLog("_startSignalR() called when not initialized")}};b.prototype._stopSignalR=function(s){if(i!=null){switch(l){case d.started:i.stop();l=d.stopped;h.publishLocalEvent({type:"SignalRStopped",data:{}});if(h._isFunction(s)){s()}if(c===true){h.donkyLogging.debugLog("Entered the stopped state and found a start request. starting ...");c=false;a._startSignalR(q);q=undefined}break;case d.stopped:h.donkyLogging.warnLog("_stopSignalR() called when already stopped");if(h._isFunction(s)){s()}break;case d.stopping:h.donkyLogging.warnLog("_stopSignalR() called when already stopping");break;case d.starting:case d.initializing:h.donkyLogging.debugLog("_stopSignalR() called when initializing / starting  - requesting a stop when started");p=true;o=s;break;default:h.donkyLogging.errorLog("Unknown signalR status: "+l);break}}else{h.donkyLogging.warnLog("_stopSignalR() called when not initialized")}};b.prototype._synchroniseOverSignalR=function(t){if(l==d.started){var s=h._getClientNotificationsToExecute();h.donkyLogging.debugLog("invoking synchronise: "+JSON.stringify(s));j=true;g.invoke("synchronise",s).done(function(u){h.donkyData.set("lastSynchroniseTime",new Date().valueOf());j=false;h.donkyLogging.infoLog("Call to synchronise succeeded, result was: "+JSON.stringify(u));h._processServerNotifications(u.serverNotifications);h._processSentClientNotifications(s);if(h._isArray(u.failedClientNotifications)&&u.failedClientNotifications.length>0){h.donkyLogging.warnLog("Exchange returnewd some failed client notifications: "+JSON.stringify(u.failedClientNotifications))}h.donkyData.remove("ExecutingClientNotifications");if(h._isPendingNotifications()){h.donkyLogging.infoLog("_processServerNotifications() generated some pending client notifications, sending now ...");a._synchroniseOverSignalR(t)}else{if(h._isFunction(t)){t()}}}).fail(function(u){j=false;l=d.stopped;h.donkyLogging.errorLog("Call to synchronise failed: "+u);if(h._isFunction(t)){t()}})}else{h.donkyLogging.warnLog("signalR not initialized so can't synchronise over this channel")}};b.prototype._synchronizeOverREST=function(t){if(j){h.donkyLogging.warnLog("synchronize called when already synchronizing");return}var s={clientNotifications:h._getClientNotificationsToExecute(),isBackground:true};j=true;this.ajax(s,"POST",this.api.secure,"notification/synchronise",function(u){h.donkyData.set("lastSynchroniseTime",new Date().valueOf());j=false;if(u.succeeded){h.donkyLogging.debugLog("Call to synchronise succeeded, result was: "+JSON.stringify(u));h._processServerNotifications(u.response.serverNotifications);h._processSentClientNotifications(s.clientNotifications);if(h._isArray(u.response.failedClientNotifications)&&u.response.failedClientNotifications.length>0){h.donkyLogging.warnLog("Exchange returnewd some failed client notifications: "+JSON.stringify(u.response.failedClientNotifications))}h.donkyData.remove("ExecutingClientNotifications");if(h._isPendingNotifications()){a._synchronizeOverREST(t)}else{if(h._isFunction(t)){t()}}}else{j=false;h.donkyLogging.errorLog("Call to synchronise failed, result was: "+JSON.stringify(u));if(h._isFunction(t)){t()}}})};b.prototype.synchronise=function(t){try{if(n){if(l==d.initializing||l==d.starting){r=t}else{if(l==d.started){a._synchroniseOverSignalR(t)}else{a._synchronizeOverREST(t)}}}else{a._synchronizeOverREST(t)}}catch(s){h.donkyLogging.errorLog("caught exception in synchronise() : "+s);t()}};b.prototype.getServerNotification=function(u,s){try{if(!h._isFunction(s)){throw new Error("resultHandler not supplied")}this.ajax(null,"GET",this.api.secure,"notification/"+u,function(v){if(v.succeeded){s(v.response)}else{h.donkyLogging.warnLog("Failed to get Server Notification: "+u);s(null)}})}catch(t){h.donkyLogging.errorLog("caught exception in getServerNotification() : "+t);s(null)}};b.prototype._getAuthorizationHeader=function(){var s=h.donkyData.get("accessDetails");return s!==null?s.tokenType+" "+s.accessToken:""};return b})();