/*!
 * DonkyData JavaScript Library
 *
 * Copyright (C) Donky Networks Ltd. All rights reserved.
 *
 */
;var DonkyData=(function(){var b,c=null;var e={namespace:"donky.net.core."};var d={_get:function(f){return localStorage.getItem(e.namespace+f)},get:function(g){var i=null;var f=this._get(g);try{i=JSON.parse(f)}catch(h){console.log("caught exception in _db.get("+g+"): "+h)}return i},_set:function(f,g){localStorage.setItem(e.namespace+f,g)},set:function(g,h){try{var f=JSON.stringify(h);this._set(g,f)}catch(i){console.log("caught exception in _db.set("+g+"): "+i)}},remove:function(f){localStorage.removeItem(e.namespace+f)},removeAll:function(f){c._each(f,function(g,h){b.remove(h)})},lsTest:function(){var g="test";try{localStorage.setItem(g,g);localStorage.removeItem(g);return true}catch(f){return false}}};function a(f){if(typeof b!="undefined"){return b}if(!d.lsTest()){throw new Error("Local storage not available")}if(f===undefined||f===null){throw new Error("no options specified")}if(f.donkyCore===undefined){throw new Error("donkyCore not specified")}c=f.donkyCore;c._extend(e,f);b=this;return b}a.prototype._getNamespace=function(){return e.namespace};a.prototype._setNamespace=function(f){e.namespace=f};a.prototype.get=function(f){return d.get(f)};a.prototype.set=function(f,g){d.set(f,g)};a.prototype.getString=function(f){return d._get(f)};a.prototype.setString=function(f,g){d._set(f,g)};a.prototype.remove=function(f){d.remove(f)};return a})(); 
/*!
 * DonkyAccount JavaScript Library v1.0.0.0
 *
 * Copyright (C) Dynmark. All rights reserved.
 *
 */
;var DonkyAccount=(function(){var a,b=null;var c={tokenExpiryCheckInterval:10000};function d(f){if(typeof a!="undefined"){return a}if(f===undefined||f===null){throw new Error("no options specified")}if(f.donkyCore===undefined){throw new Error("donkyCore not specified")}b=f.donkyCore;a=this;setInterval(function(){a._checkToken(function(){})},c.tokenExpiryCheckInterval);return a}d.prototype._getBrowserInfo=function(){var g=navigator.userAgent,f,h=g.match(/(opera|chrome|safari|firefox|msie|trident(?=\/))\/?\s*(\d+)/i)||[];if(/trident/i.test(h[1])){f=/\brv[ :]+(\d+)/g.exec(g)||[];return"IE "+(f[1]||"")}if(h[1]==="Chrome"){f=g.match(/\bOPR\/(\d+)/);if(f!=null){return"Opera "+f[1]}}h=h[2]?[h[1],h[2]]:[navigator.appName,navigator.appVersion,"-?"];if((f=g.match(/version\/(\d+)/i))!=null){h.splice(1,1,f[1])}return h.join(" ")};d.prototype._checkToken=function(m,h){if(!a._isSuspended()||h===true){var l=b.donkyData.get("accessDetails");if(l!==null&&l!==undefined){var g=new Date(l.expiresOn);var i=new Date();var j=false;if(g>i){var f=Math.abs(i.getTime()-g.getTime());var k=Math.ceil(f/1000);if(k<60){j=true}b.donkyLogging.debugLog("Token expires in "+k+" seconds"+(j?" (refreshing)":""))}else{b.donkyLogging.debugLog("Token expired");j=true}if(j){this._refreshToken(m)}else{m({succeeded:true})}}else{b.donkyLogging.warnLog("no accessDetails to check");m({succeeded:true})}}else{m({succeeded:false})}};d.prototype._refreshToken=function(i){if(!b._isFunction(i)){throw new Error("resultHandler not supplied")}var h=false;var f=b.donkyNetwork._getSignalRState();if(f==b.donkyNetwork.signalrStatuses.initializing||f==b.donkyNetwork.signalrStatuses.starting||f==b.donkyNetwork.signalrStatuses.started){b.donkyNetwork._stopSignalR();h=true}var g={networkId:b.donkyData.get("networkId"),deviceSecret:b.donkyData.get("secret"),operatingSystem:"Web",sdkVersion:b.version()};b.donkyNetwork.ajax(g,"POST",b.donkyNetwork.api.anonymous,"authentication/gettoken",function(j){if(j.succeeded){b.donkyLogging.debugLog("Succesfully refreshed authorization token");b.donkyData.set("configuration",j.response.configuration);delete j.response.configuration;b.donkyData.set("accessDetails",j.response);b.donkyData.remove("isSuspended");if(h){b.donkyNetwork._startSignalR()}i({succeeded:true})}else{b.donkyLogging.warnLog("Failed to  refresh authorization token");if(j.statusCode===401){b.donkyLogging.warnLog("Can't refresh token - have I been deleted ?");var k=a.getRegistrationDetails();a._register(k,function(l){if(h){b.donkyNetwork._startSignalR()}i(l)})}else{if(j.statusCode===403){b.donkyLogging.warnLog("Can't refresh token - have been suspended");b.donkyData.set("isSuspended",true)}}if(j.statusCode!==401){i({succeeded:false,result:j})}}})};d.prototype._getDeviceId=function(){var f=b.donkyData.get("deviceId");if(f===null){f=b._uuid();b.donkyData.set("deviceId",f);b.donkyData.set("secret",b._uuid())}return f};d.prototype.isRegistered=function(){try{return b.donkyData.get("networkId")!==null}catch(f){b.donkyLogging.errorLog("caught exception in isRegistered() : "+f);return false}};function e(g){var f={id:a._getDeviceId(),secret:b.donkyData.get("secret"),operatingSystem:"Web",operatingSystemVersion:navigator.userAgent,model:a._getBrowserInfo()};return b._extend(g,f)}d.prototype._register=function(f,h){if(!b._isFunction(h)){throw new Error("resultHandler not supplied")}if(f.deviceDetails===undefined){f.deviceDetails={}}var g={device:f.deviceDetails,user:f.userDetails,client:{sdkVersion:b.version(),moduleVersions:b._moduleVersions,appVersion:f.appVersion,currentLocalTime:new Date().toISOString()}};e(g.device);b.donkyLogging.debugLog(JSON.stringify(g));b.donkyNetwork.ajax(g,"POST",b.donkyNetwork.api.anonymous,"registration",function(j){if(j.succeeded){b.donkyData.set("networkId",j.response.networkId);b.donkyData.set("configuration",j.response.accessDetails.configuration);delete j.response.accessDetails.configuration;b.donkyData.set("accessDetails",j.response.accessDetails);var i=g.user!==undefined?g.user:{id:j.response.userId};i.isAnonymous=g.user===undefined;if(i.displayName===undefined){i.displayName=j.response.userId}delete g.device.id;delete g.device.secret;b.donkyData.set("userDetails",i);b.donkyData.set("deviceDetails",g.device);b.donkyData.set("clientDetails",g.client);b.publishLocalEvent({type:"RegistrationChanged",data:{userDetails:i,deviceDetails:g.device}})}h(j)})};d.prototype.getRegistrationDetails=function(){try{return{userDetails:b.donkyData.get("userDetails"),deviceDetails:b.donkyData.get("deviceDetails")}}catch(f){b.donkyLogging.errorLog("caught exception in getRegistrationDetails() : "+f);return null}};d.prototype.getDevice=function(){try{var f=b.donkyData.get("deviceDetails");if(f==null){f={operatingSystem:"Web",operatingSystemVersion:navigator.userAgent,model:a._getBrowserInfo()}}return f}catch(g){b.donkyLogging.errorLog("caught exception in getDevice() : "+g);return null}};d.prototype._getClient=function(){return b.donkyData.get("clientDetails")};d.prototype.updateRegistrationDetails=function(g,f){try{if(!b._isFunction(f)){throw new Error("callback not supplied")}if(g===undefined||g===null){throw new Error("settings not supplied")}if(g.userDetails!==undefined&&g.deviceDetails!==undefined){a._updateRegistrationDetails(g,f)}else{if(g.userDetails!==undefined){a.updateUserDetails(g.userDetails,f)}else{if(g.deviceDetails!==undefined){a.updateDeviceDetails(g.deviceDetails,f)}else{throw new Error("neither userDetails or deviceDetails specified - must specify at least 1")}}}}catch(h){b.donkyLogging.errorLog("caught exception in updateRegistrationDetails() : "+h)}};d.prototype.replaceRegistration=function(g,f){try{b.donkyNetwork.synchronise(function(){a._register(g,function(i){f(i)})})}catch(h){b.donkyLogging.errorLog("caught exception in replaceRegistration() : "+h)}};d.prototype._updateRegistrationDetails=function(g,h){var f={user:g.userDetails,device:g.deviceDetails};e(f.device);b.donkyNetwork.ajax(f,"PUT",b.donkyNetwork.api.secure,"registration",function(i){if(i.succeeded){b.donkyData.set("userDetails",f.user);delete f.device.id;delete f.device.secret;b.donkyData.set("deviceDetails",f.device)}h(i)})};d.prototype.updateUserDetails=function(h,g){try{if(h===undefined){throw new Error("userDetails not supplied")}if(!b._isFunction(g)){throw new Error("callback not supplied")}b.donkyNetwork.ajax(h,"PUT",b.donkyNetwork.api.secure,"registration/user",function(i){if(i.succeeded){b.donkyData.set("userDetails",h)}g(i)})}catch(f){b.donkyLogging.errorLog("caught exception in updateUserDetails() : "+f)}};d.prototype.updateDeviceDetails=function(f,h){try{if(f===undefined){throw new Error("deviceDetails not supplied")}if(!b._isFunction(h)){throw new Error("callback not supplied")}e(f);b.donkyNetwork.ajax(f,"PUT",b.donkyNetwork.api.secure,"registration/device",function(i){if(i.succeeded){delete f.id;delete f.secret;b.donkyData.set("deviceDetails",f)}h(i)})}catch(g){b.donkyLogging.errorLog("caught exception in updateDeviceDetails() : "+g)}};d.prototype._updateClient=function(f,h){try{if(!b._isFunction(h)){throw new Error("callback not supplied")}b.donkyNetwork.ajax(f,"PUT",b.donkyNetwork.api.secure,"registration/client",function(i){if(i.succeeded){b.donkyData.set("clientDetails",f)}h(i)})}catch(g){b.donkyLogging.errorLog("caught exception in _updateClient() : "+g)}};d.prototype._isSuspended=function(){var f=b.donkyData.get("isSuspended");return f!==null?f:false};d.prototype.getTags=function(g){try{if(!b._isFunction(g)){throw new Error("callback not supplied")}b.donkyNetwork.ajax(null,"GET",b.donkyNetwork.api.secure,"registration/user/tags",function(h){g(h)})}catch(f){b.donkyLogging.errorLog("caught exception in getTags() : "+f)}};d.prototype.putTags=function(f,h){try{if(!b._isFunction(h)){throw new Error("callback not supplied")}b.donkyNetwork.ajax(f,"PUT",b.donkyNetwork.api.secure,"registration/user/tags",function(i){h(i)})}catch(g){b.donkyLogging.errorLog("caught exception in putTags() : "+g)}};return d})(); 
/*!
 * DonkyLogging JavaScript Library
 *
 * Copyright (C) Donky Networks Ltd. All rights reserved.
 *
 */
;var DonkyLogging=(function(){var a={Fatal:0,Error:1,Warn:2,Info:3,Debug:4};var h={0:"Fatal",1:"Error",2:"Warn",3:"Info",4:"Debug"};var b;var g={logLevel:a.Debug,maxSize:1024*1,key:"rollingLogfile"};var d=null;var c=("0000"+(Math.random()*Math.pow(36,4)<<0).toString(36)).slice(-4);function f(m,l,i){if(m<=g.logLevel){var k="["+c+"] : "+new Date().toJSON()+" ["+h[m]+"] : "+l+(i!==undefined?(" : "+JSON.stringify(i)):"")+"\r\n";switch(m){case a.Fatal:case a.Error:console.error(k);break;case a.Warn:console.warn(k);break;default:console.log(k);break}var j=d.donkyData.getString(g.key);if(j!==null){j+=k}else{j=k}if(j.length>g.maxSize){j=j.substring(k.length)}d.donkyData.setString(g.key,j);d.publishLocalEvent({type:"LogMessage",data:{logLevel:m,message:l,args:i}})}}function e(i){if(typeof b!="undefined"){return b}if(i===undefined||i===null){throw new Error("no options specified")}if(i.donkyCore===undefined){throw new Error("No donkyCore specified")}d=i.donkyCore;b=this;return b}e.prototype._submitAutomaticErrorLog=function(){var i=d.donkyData.get("configuration");if(i!==null&&i!==undefined){if(i.configurationItems!==undefined&&i.configurationItems.AlwaysSubmitErrors=="true"){d._submitLog("AutomaticByDevice")}}};e.prototype.fatalLog=function(j,i){if(a.Fatal<=g.logLevel){f(a.Fatal,j,i);d._submitLog("AutomaticByDevice")}};e.prototype.errorLog=function(j,i){if(a.Error<=g.logLevel){f(a.Error,j,i);d._submitLog("AutomaticByDevice")}};e.prototype.warnLog=function(j,i){if(a.Warn<=g.logLevel){f(a.Warn,j,i)}};e.prototype.infoLog=function(j,i){if(a.Info<=g.logLevel){f(a.Info,j,i)}};e.prototype.debugLog=function(j,i){if(a.Debug<=g.logLevel){f(a.Debug,j,i)}};e.prototype.getLog=function(){return d.donkyData.getString(g.key)};e.prototype.clearLog=function(){return d.donkyData.remove(g.key)};e.prototype.logLevel=a;e.prototype._getLogLevel=function(){return g.logLevel};e.prototype._setLogLevel=function(i){if(i>=a.Fatal&&i<=a.Debug){g.logLevel=i}};return e})(); 
/*!
 * DonkyNetwork JavaScript Library
 *
 * Copyright (C) Donky Networks Ltd. All rights reserved.
 *
 */
;var DonkyNetwork=(function(){var m={checkSynchroniseInterval:1000,maxSecondsWithoutSynchronize:5*60,retrySchedule:[5000,5000,30000,30000,60000,120000,300000,300000,300000,300000,300000,300000,300000,300000,300000,600000,600000,600000,600000,600000,600000,900000]};var a;var h=null;var f=0;b.prototype.api={anonymous:"client-api.mobiledonky.com/api/",secure:"client-secure-api-northeurope.mobiledonky.com/api/"};var d={initializing:0,starting:1,started:2,stopping:3,stopped:4,error:5};b.prototype.signalrStatuses=d;var p=false;var o=undefined;var c=false;var q=undefined;var r=undefined;var k=false;var l=d.stopped;var i=null;var g=null;var j=false;var n=true;function e(){if(!h.donkyAccount._isSuspended()){var s=h.donkyData.get("lastSynchroniseTime");if(s!==null){var t=new Date(s);var u=h._dateDiff(t,new Date());if(u.seconds>m.maxSecondsWithoutSynchronize){a.synchronise()}}}}function b(t){if(typeof a!="undefined"){return a}if(t===undefined||t===null){throw new Error("no options specified")}if(t.donkyCore===undefined){throw new Error("donkyCore not specified")}h=t.donkyCore;if(window.jQuery===undefined){throw new Error("jQuery not found")}if(h._versionCompare($.fn.jquery,"1.6.4")<0){throw new Error("jQuery varsion too old - require minimum version of 1.6.4")}if(window.$.signalR===undefined){throw new Error("jQuery not found")}if(h._versionCompare(window.$.signalR.version,"2.2.0")<0){throw new Error("signalR varsion too old - require minimum version of 2.2.0")}a=this;setInterval(function(){e()},m.checkSynchroniseInterval);if(n){h.subscribeToLocalEvent("RegistrationChanged",function(w){if(l==d.initializing||l==d.starting||l==d.started){a._stopSignalR(function(){a._startSignalR()})}});h.subscribeToLocalEvent("DonkyInitialised",function(w){if(!k){a._initSignalR()}else{if(l==d.stopped){a._startSignalR()}}})}var v=h.donkyData.get("configuration");if(v!==null&&v!==undefined&&v.configurationItems!==undefined){if(typeof v.configurationItems.DeviceCommsConnectionRetrySchedule=="string"){var s=v.configurationItems.DeviceCommsConnectionRetrySchedule.split("|");var u=[];h._each(s,function(x,z){var B=z.split(",");if(B.length==2){var w=parseInt(B[0]);var A=B[1]==="*"?1:parseInt(B[1]);for(var y=0;y<A;y++){u.push(w*1000)}}});m.retrySchedule=u}if(n&&typeof v.configurationItems.MaxMinutesWithoutNotificationExchange=="string"){m.maxSecondsWithoutSynchronize=parseInt(v.configurationItems.MaxMinutesWithoutNotificationExchange)*60}}return a}b.prototype.ajax=function(u,t,s,x,w){try{a._ajax(u,t,s,x,function(y){if(!y.succeeded&&y.statusCode!==400&&y.statusCode!==401&&y.statusCode!==403&&y.statusCode!==404&&!h.donkyAccount._isSuspended()&&h.donkyAccount.isRegistered()){h.donkyLogging.debugLog("Retrying ajax call in "+m.retrySchedule[f]+" ms - retryCounter = "+f);setTimeout(function(){a.ajax(u,t,s,x,w)},m.retrySchedule[f]);if(f<m.retrySchedule.length-1){f++}}else{if(y.succeeded){f=0}w(y)}})}catch(v){h.donkyLogging.errorLog("caught exception in ajax() : "+v);w({succeeded:false,statusCode:-1})}};b.prototype._ajax=function(w,z,y,s,A){var u={};if(y===a.api.secure){u.authorization=h.donkyNetwork._getAuthorizationHeader()}else{u.apiKey=h.donkyData.get("apiKey")}var x=h.donkyData.get("environment");var t=h.donkyData.get("scheme");var v=$.ajax({url:t+x+y+s,type:z,beforeSend:function(B){if(u!==null){h._each(u,function(C,D){B.setRequestHeader(C,D)})}},contentType:"application/json",data:w!==null?JSON.stringify(w):undefined,dataType:"json"}).done(function(B){if(B!==null&&B!==undefined){h.donkyLogging.debugLog(JSON.stringify(B))}A({succeeded:true,response:B})}).fail(function(E,B){if(E.readyState==4){var G;var C=null;var D=E.statusCode();switch(D.status){case 400:try{C=JSON.parse(D.responseText)}catch(F){h.donkyLogging.warnLog("failed to parse responseText: "+D.responseText)}G=z+" to  "+y+s+" returned a "+D.status+" (Bad request)\nrequest: "+JSON.stringify(w)+"\nheaders: "+JSON.stringify(u)+"\nresponse: "+JSON.stringify(C);h.donkyLogging.warnLog(G);break;default:G=z+" to  "+y+s+" returned a "+D.status+"\nrequest: "+JSON.stringify(w)+"\nheaders: "+JSON.stringify(u)+"\nresponse: "+D.responseText;h.donkyLogging.warnLog(G);break}A({succeeded:false,response:C,statusCode:D.status})}else{G=z+" to  "+y+s+" failed ("+B+")\nrequest: "+JSON.stringify(w)+"\nheaders: "+JSON.stringify(u);h.donkyLogging.warnLog(G);A({succeeded:false,statusCode:-1})}})};b.prototype._initSignalR=function(){if(i==null){l=d.initializing;var s=h.donkyData.get("accessDetails");i=$.hubConnection(s.signalRUrl,{useDefaultPath:false});i.qs={access_token:s.accessToken};if(h.donkyLogging._getLogLevel()>=h.donkyLogging.logLevel.Info){i.logging=true}g=i.createHubProxy("NetworkHub");g.on("push",function(t){h.donkyLogging.debugLog("Push was called with notifications: "+JSON.stringify(t));h._processServerNotifications(t);if(n){a._synchroniseOverSignalR()}else{a._synchronizeOverREST()}});k=true;a._startSignalR()}else{h.donkyLogging.warnLog("_signalR.init() called twice")}};b.prototype._isSignalRStarted=function(){return l==d.started};b.prototype._getSignalRState=function(){return l};b.prototype._useSignalR=function(s){n=s};b.prototype._startSignalR=function(t){if(i!=null){var s=h.donkyData.get("accessDetails");switch(l){case d.initializing:case d.stopped:i.qs={access_token:s.accessToken};l=d.starting;i.start().done(function(){l=d.started;h.publishLocalEvent({type:"SignalRStarted",data:{}});if(h._isFunction(t)){t()}a._synchroniseOverSignalR(function(){if(r!==undefined){h.donkyLogging.debugLog("syncWhenStartingCallback registered, calling ...");r();r=undefined}if(p===true){h.donkyLogging.debugLog("Entered the started state and found a stop request. stopping ...");p=false;a._stopSignalR(o);o=undefined}})}).fail(function(u){l=d.stopped;h.donkyLogging.warnLog("Connection error: "+u);a._synchronizeOverREST(function(){if(r!==undefined){h.donkyLogging.debugLog("syncWhenStartingCallback registered, calling ...");r();r=undefined}})});break;case d.started:if(h._isFunction(t)){t()}h.donkyLogging.warnLog("_startSignalR() called when already started");break;case d.starting:h.donkyLogging.warnLog("_startSignalR() called when starting");break;case d.stopping:h.donkyLogging.debugLog("_startSignalR() called when stopping - requesting a start when stopped");c=true;q=t;break;default:h.donkyLogging.errorLog("Unknown signalR status: "+l);break}}else{h.donkyLogging.warnLog("_startSignalR() called when not initialized")}};b.prototype._stopSignalR=function(s){if(i!=null){switch(l){case d.started:i.stop();l=d.stopped;h.publishLocalEvent({type:"SignalRStopped",data:{}});if(h._isFunction(s)){s()}if(c===true){h.donkyLogging.debugLog("Entered the stopped state and found a start request. starting ...");c=false;a._startSignalR(q);q=undefined}break;case d.stopped:h.donkyLogging.warnLog("_stopSignalR() called when already stopped");if(h._isFunction(s)){s()}break;case d.stopping:h.donkyLogging.warnLog("_stopSignalR() called when already stopping");break;case d.starting:case d.initializing:h.donkyLogging.debugLog("_stopSignalR() called when initializing / starting  - requesting a stop when started");p=true;o=s;break;default:h.donkyLogging.errorLog("Unknown signalR status: "+l);break}}else{h.donkyLogging.warnLog("_stopSignalR() called when not initialized")}};b.prototype._synchroniseOverSignalR=function(t){if(l==d.started){var s=h._getClientNotificationsToExecute();h.donkyLogging.debugLog("invoking synchronise: "+JSON.stringify(s));j=true;g.invoke("synchronise",s).done(function(u){h.donkyData.set("lastSynchroniseTime",new Date().valueOf());j=false;h.donkyLogging.infoLog("Call to synchronise succeeded, result was: "+JSON.stringify(u));h._processServerNotifications(u.serverNotifications);h._processSentClientNotifications(s);if(h._isArray(u.failedClientNotifications)&&u.failedClientNotifications.length>0){h.donkyLogging.warnLog("Exchange returnewd some failed client notifications: "+JSON.stringify(u.failedClientNotifications))}h.donkyData.remove("ExecutingClientNotifications");if(h._isPendingNotifications()){h.donkyLogging.infoLog("_processServerNotifications() generated some pending client notifications, sending now ...");a._synchroniseOverSignalR(t)}else{if(h._isFunction(t)){t()}}}).fail(function(u){j=false;l=d.stopped;h.donkyLogging.errorLog("Call to synchronise failed: "+u);if(h._isFunction(t)){t()}})}else{h.donkyLogging.warnLog("signalR not initialized so can't synchronise over this channel")}};b.prototype._synchronizeOverREST=function(t){if(j){h.donkyLogging.warnLog("synchronize called when already synchronizing");return}var s={clientNotifications:h._getClientNotificationsToExecute(),isBackground:true};j=true;this.ajax(s,"POST",this.api.secure,"notification/synchronise",function(u){h.donkyData.set("lastSynchroniseTime",new Date().valueOf());j=false;if(u.succeeded){h.donkyLogging.debugLog("Call to synchronise succeeded, result was: "+JSON.stringify(u));h._processServerNotifications(u.response.serverNotifications);h._processSentClientNotifications(s.clientNotifications);if(h._isArray(u.response.failedClientNotifications)&&u.response.failedClientNotifications.length>0){h.donkyLogging.warnLog("Exchange returnewd some failed client notifications: "+JSON.stringify(u.response.failedClientNotifications))}h.donkyData.remove("ExecutingClientNotifications");if(h._isPendingNotifications()){a._synchronizeOverREST(t)}else{if(h._isFunction(t)){t()}}}else{j=false;h.donkyLogging.errorLog("Call to synchronise failed, result was: "+JSON.stringify(u));if(h._isFunction(t)){t()}}})};b.prototype.synchronise=function(t){try{if(n){if(l==d.initializing||l==d.starting){r=t}else{if(l==d.started){a._synchroniseOverSignalR(t)}else{a._synchronizeOverREST(t)}}}else{a._synchronizeOverREST(t)}}catch(s){h.donkyLogging.errorLog("caught exception in synchronise() : "+s);t()}};b.prototype.getServerNotification=function(u,s){try{if(!h._isFunction(s)){throw new Error("resultHandler not supplied")}this.ajax(null,"GET",this.api.secure,"notification/"+u,function(v){if(v.succeeded){s(v.response)}else{h.donkyLogging.warnLog("Failed to get Server Notification: "+u);s(null)}})}catch(t){h.donkyLogging.errorLog("caught exception in getServerNotification() : "+t);s(null)}};b.prototype._getAuthorizationHeader=function(){var s=h.donkyData.get("accessDetails");return s!==null?s.tokenType+" "+s.accessToken:""};return b})(); 
/*!
 * DonkyCore JavaScript Library
 *
 * Copyright (C) Donky Networks Ltd. All rights reserved.
 *
 */
;var DonkyCore=(function(){var h;var g=[];var c=[];var f=[];var e=[];var a={};i.prototype._extend=function(){for(var k=1;k<arguments.length;k++){for(var j in arguments[k]){if(arguments[k].hasOwnProperty(j)){arguments[0][j]=arguments[k][j]}}}return arguments[0]};i.prototype._isFunction=function(j){var k={};return j&&k.toString.call(j)==="[object Function]"};i.prototype._isArray=function(j){return Object.prototype.toString.call(j)==="[object Array]"};i.prototype._each=function(n,o){var m,k=0,l=n.length,j=h._isArray(n);if(j){for(;k<l;k++){m=o.call(n[k],k,n[k]);if(m===false){break}}}else{for(k in n){m=o.call(n[k],k,n[k]);if(m===false){break}}}return n};i.prototype._uuid=function(){var j="xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(m){var l=Math.random()*16|0,k=m=="x"?l:(l&3|8);return k.toString(16)});return j};function i(){if(typeof h!="undefined"){return h}h=this;h.registerModule({name:"donkyCore",version:h.version()});i.prototype.donkyData=new DonkyData({donkyCore:h});i.prototype.donkyLogging=new DonkyLogging({donkyCore:h});i.prototype.donkyNetwork=new DonkyNetwork({donkyCore:h});i.prototype.donkyAccount=new DonkyAccount({donkyCore:h});h.subscribeToDonkyNotifications({name:"donkyCore",version:h.version()},{notificationType:"TransmitDebugLog",handler:function(j){h.donkyLogging.debugLog("TransmitDebugLog : "+JSON.stringify(j));h._queueAcknowledgement(j,"Delivered");h.submitLog()}},true);return h}i.prototype._dateDiff=function(j,l){var k=l-j;if(isNaN(k)){return NaN}return{milliSeconds:k,seconds:Math.floor(k/1000),minutes:Math.floor(k/(1000*60)),hours:Math.floor(k/(1000*60*60)),days:Math.floor(k/(1000*60*60*24))}};i.prototype._versionCompare=function(q,p,j){var o=j&&j.lexicographical,n=q.split("."),l=p.split(".");function m(r){return(o?/^\d+[A-Za-z]*$/:/^\d+$/).test(r)}if(!n.every(m)||!l.every(m)){return NaN}while(n.length<l.length){n.push("0")}while(l.length<n.length){l.push("0")}if(!o){n=n.map(Number);l=l.map(Number)}for(var k=0;k<n.length;++k){if(l.length==k){return 1}if(n[k]==l[k]){continue}else{if(n[k]>l[k]){return 1}else{return -1}}}if(n.length!=l.length){return -1}return 0};i.prototype._isPendingNotifications=function(){var j=h.donkyData.get("PendingClientNotifications");return j!==null&&j!==undefined&&h._isArray(j)&&j.length>0};i.prototype._getClientNotificationsToExecute=function(){var j=h.donkyData.get("PendingClientNotifications");var l=h.donkyData.get("ExecutingClientNotifications");var k=[];if(l!==null){k=l}if(j!==null){k=k.concat(j)}h.donkyData.set("ExecutingClientNotifications",k);h.donkyData.remove("PendingClientNotifications");h.donkyLogging.infoLog("_getClientNotificationsToExecute() : "+JSON.stringify(k));return k};i.prototype._queueAcknowledgement=function(l,j){var k={type:"Acknowledgement",acknowledgementDetail:{serverNotificationId:l.id,result:j,sentTime:new Date().toISOString(),type:l.type,customNotificationType:l.type==="Custom"?l.data.customType:undefined}};h.queueClientNotifications(k)};i.prototype._processServerNotifications=function(j){h._each(j,function(l,p){var m=p.type=="Custom";var o=false;var n=false;var k=m?c:g;if(m){h._queueAcknowledgement(p,"Delivered");o=true}h._each(k,function(q,r){try{if(((m&&r.notificationType==p.data.customType)||r.notificationType==p.type)&&!r.removed){r.handler(p);o=true;if(r.autoAcknowledge){n=true}}}catch(s){h.donkyLogging.errorLog("Caught exception processing Message: "+p.type);o=false}});if(!o){h.donkyLogging.warnLog("Message: "+p.type+" not handled")}if(!m&&(!o||n)){h._queueAcknowledgement(p,o?"Delivered":"DeliveredNoSubscription")}})};i.prototype._processSentClientNotifications=function(j){h._each(j,function(k,l){h._each(f,function(m,n){if(n.notificationType==l.type&&!n.removed){n.handler(l)}})})};i.prototype.queueContentNotifications=function(k){try{var j=[];if(h._isArray(k)){h._each(k,function(m,n){j.push({type:"SendContent",definition:n})})}else{j.push({type:"SendContent",definition:k})}h.queueClientNotifications(j)}catch(l){h.donkyLogging.errorLog("caught exception in queueCustomNotifications() : "+l)}};i.prototype.sendContentNotifications=function(j,k){try{h.queueContentNotifications(j);h.donkyNetwork.synchronise(k)}catch(l){h.donkyLogging.errorLog("caught exception in sendContentNotifications() : "+l)}};i.prototype.createContentNotificationForSpecifiedUsers=function(n,m,j){try{var l={audience:{type:"SpecifiedUsers",users:[]},content:{type:"Custom",customType:m,data:j},filters:[]};if(h._isArray(n)){h._each(n,function(p,o){l.audience.users.push({userId:o})})}else{l.audience.users.push({userId:n})}return l}catch(k){h.donkyLogging.errorLog("caught exception in formatContentNotification() : "+k);return null}};i.prototype.queueClientNotifications=function(k){try{h.donkyLogging.infoLog("queueClientNotification: "+JSON.stringify(k));var j=h.donkyData.get("PendingClientNotifications");if(j===null||j===undefined){j=[]}if(h._isArray(k)){h._each(k,function(m,n){j.push(n)})}else{j.push(k)}h.donkyData.set("PendingClientNotifications",j)}catch(l){h.donkyLogging.errorLog("caught exception in queueClientNotifications() : "+l)}};i.prototype._compareDictionaries=function(k,j){var l=true;if(k===undefined&&j===undefined){}else{if(k!==undefined&&j!==undefined){if(Object.keys(k).length==Object.keys(j).length){h._each(k,function(m,n){if(n!=j[m]){l=false}return l})}else{l=false}}else{if(k!==undefined||j!==undefined){l=false}}}return l};i.prototype._updateClientInfoIfChanged=function(){var j=h.donkyAccount._getClient();if(j!==null&&j!==undefined){if(!h._compareDictionaries(j.moduleVersions,h._moduleVersions)){h.donkyLogging.debugLog("moduleVersions different - updating network ...");j.moduleVersions=h._moduleVersions;j.currentLocalTime=new Date().toISOString();h.donkyAccount._updateClient(j,function(k){if(k.succeeded){h.donkyLogging.debugLog("moduleVersions succesfully updated")}else{h.donkyLogging.errorLog("Failed to update moduleVersions")}})}}};i.prototype._hasUserDetailsChanged=function(k){var j=h.donkyAccount.getRegistrationDetails();return(k.id!=j.userDetails.id||k.displayName!=j.userDetails.displayName||k.firstName!=j.userDetails.firstName||k.lastName!=j.userDetails.lastName||k.emailAddress!=j.userDetails.emailAddress||k.countryCode!=j.userDetails.countryCode||k.phoneNumber!=j.userDetails.phoneNumber||!h._compareDictionaries(k.additionalProperties,j.userDetails.additionalProperties))};i.prototype._hasDeviceDetailsChanged=function(j){var k=h.donkyAccount.getRegistrationDetails();return(j.type!=k.deviceDetails.type||j.name!=k.deviceDetails.name||!h._compareDictionaries(j.additionalProperties,k.deviceDetails.additionalProperties))};i.prototype._initialize=function(k){if(k.userDetails!==undefined||k.deviceDetails!==undefined){h._updateClientInfoIfChanged();var j={};if(k.deviceDetails!==undefined&&h._hasDeviceDetailsChanged(k.deviceDetails)){j.deviceDetails=k.deviceDetails}if(k.userDetails!==undefined&&h._hasUserDetailsChanged(k.userDetails)){j.userDetails=k.userDetails}if(j.deviceDetails!==undefined||j.userDetails!==undefined){h.donkyAccount.updateRegistrationDetails(j,function(l){if(l.succeeded){h.publishLocalEvent({type:"DonkyInitialised",data:{}})}k.resultHandler(l)})}else{h.publishLocalEvent({type:"DonkyInitialised",data:{}});k.resultHandler({succeeded:true})}}else{h.publishLocalEvent({type:"DonkyInitialised",data:{}});k.resultHandler({succeeded:true})}};i.prototype.initialise=function(j){try{if(j===undefined||j===null){throw new Error("no options specified")}if(j.apiKey===undefined){h.donkyLogging.warnLog("No apiKey specified");throw new Error("apiKey not specified")}if(!h._isFunction(j.resultHandler)){h.donkyLogging.warnLog("No ResultHandler specified");throw new Error("resultHandler not specified")}var l=h.donkyData.get("apiKey");if(l!==null&&l!==j.apiKey){h.donkyData.remove("networkId")}if(j.useSignalR===false){h.donkyNetwork._useSignalR(false)}else{h.donkyNetwork._useSignalR(true)}h.donkyData.set("apiKey",j.apiKey);h.donkyData.set("environment",j.environment!==undefined?j.environment:"");h.donkyData.set("scheme",j.scheme!==undefined?j.scheme:"https://");if(!h.donkyAccount.isRegistered()){h.donkyAccount._register(j,function(m){if(m.succeeded){h.publishLocalEvent({type:"DonkyInitialised",data:{}})}j.resultHandler(m)})}else{h.donkyAccount._checkToken(function(m){if(m.succeeded){h._initialize(j)}else{j.resultHandler(m)}},true)}}catch(k){h.donkyLogging.errorLog("caught exception in initialise() : "+k);if(j!==undefined&&h._isFunction(j.resultHandler)){j.resultHandler({succeeded:false})}}};function b(k,m,j,l){if(h._isArray(m)){h._each(m,function(n,o){o.autoAcknowledge=l===undefined?true:l;j.push(o)})}else{m.autoAcknowledge=l===undefined?true:l;j.push(m)}h.registerModule(k)}function d(k,m,j){var l=h._isArray(m)?m:[m];h._each(l,function(n,q){for(var o=j.length-1;o>=0;o--){var p=j[o];if(p.notificationType===q.notificationType&&p.handler===q.handler){p.removed=true}}})}i.prototype.subscribeToDonkyNotifications=function(j,m,l){try{b(j,m,g,l)}catch(k){h.donkyLogging.errorLog("caught exception in subscribeToDonkyNotifications() : "+k)}};i.prototype.subscribeToContentNotifications=function(j,l){try{b(j,l,c)}catch(k){h.donkyLogging.errorLog("caught exception in subscribeToContentNotifications() : "+k)}};i.prototype.unsubscribeFromContentNotifications=function(j,l){try{d(j,l,c)}catch(k){h.donkyLogging.errorLog("caught exception in unsubscribeFromContentNotifications() : "+k)}};i.prototype.unsubscribeFromDonkyNotifications=function(j,l){try{d(j,l,g)}catch(k){h.donkyLogging.errorLog("caught exception in unsubscribeFromDonkyNotifications() : "+k)}};i.prototype.subscribeToOutboundNotifications=function(j,l){try{if(h._isArray(l)){h._each(l,function(m,n){f.push(n)})}else{f.push(l)}h.registerModule(j)}catch(k){h.donkyLogging.errorLog("caught exception in subscribeToOutboundNotifications() : "+k)}};i.prototype.unsubscribeFromOutboundNotifications=function(j,l){try{d(j,l,f)}catch(k){h.donkyLogging.errorLog("caught exception in unsubscribeFromOutboundNotifications() : "+k)}};i.prototype.publishLocalEvent=function(j){try{var l=false;h._each(e,function(n,m){if(m.eventType==j.type&&m.removed!==true){try{m.handler(j);l=true}catch(o){h.donkyLogging.warnLog("caught exception in local event handler() : "+o)}}});if(!l){}}catch(k){h.donkyLogging.warnLog("caught exception in publishLocalEvent() : "+k)}};i.prototype.subscribeToLocalEvent=function(j,k){try{e.push({eventType:j,handler:k})}catch(l){h.donkyLogging.errorLog("caught exception in subscribeToLocalEvent() : "+l)}};i.prototype.unsubscribeFromLocalEvent=function(k,m){try{var o=false;for(var j=e.length-1;j>=0;j--){var l=e[j];if(l.eventType===k&&l.handler===m){l.removed=true;o=true;h.donkyLogging.debugLog("unsubscribeToEvent() succeeded")}}if(!o){h.donkyLogging.warnLog("unsubscribeToEvent() failed")}}catch(n){h.donkyLogging.errorLog("caught exception in unsubscribeFromLocalEvent() : "+n)}};i.prototype.formatAssetUrl=function(k){try{var l=h.donkyData.get("configuration");return l.configurationItems.AssetDownloadUrlFormat.replace("{0}",k)}catch(j){h.donkyLogging.errorLog("caught exception in formatAssetUrl() : "+j);return null}};i.prototype.formatAssetDownloadUrl=function(m,k){try{var n=h.donkyData.get("configuration");var j=n.configurationItems.AssetDownloadNamedFileUrlFormat.replace("{0}",m);return j.replace("{1}",k)}catch(l){h.donkyLogging.errorLog("caught exception in formatAssetDownloadUrl() : "+l);return null}};i.prototype.registerService=function(k,j){try{if(a[k]!==undefined){h.donkyLogging.warnLog("registerService("+k+") - overwriting an existing instance")}else{h.donkyLogging.debugLog("registerService("+k+")")}a[k]=j}catch(l){h.donkyLogging.errorLog("caught exception in registerService() : "+l)}};i.prototype.getService=function(j){try{if(a[j]!==undefined){h.donkyLogging.debugLog("getService("+j+")");return a[j]}else{h.donkyLogging.warnLog("getService("+j+") - service not available");return null}}catch(k){h.donkyLogging.errorLog("caught exception in getService() : "+k);return null}};i.prototype.unregisterService=function(j){try{if(a[j]!==undefined){h.donkyLogging.debugLog("unregisterService("+j+")");delete a[j]}else{h.donkyLogging.warnLog("unregisterService("+j+") - service not available")}}catch(k){h.donkyLogging.errorLog("caught exception in unregisterService() : "+k)}};i.prototype._moduleVersions={};i.prototype.registerModule=function(j){try{if(h._moduleVersions[j.name]!==undefined){if(h._moduleVersions[j.name]!=j.version){h._moduleVersions[j.name]=j.version}}else{h._moduleVersions[j.name]=j.version}}catch(k){h.donkyLogging.errorLog("caught exception in registerModule() : "+k)}};i.prototype.isModuleRegistered=function(j,k){try{var m=false;if(h._moduleVersions[j]!==undefined){if(k===undefined){m=true}else{m=h._versionCompare(k,h._moduleVersions[j])<=0}}return m}catch(l){h.donkyLogging.errorLog("caught exception in isModuleRegistered() : "+l);return false}};i.prototype.getRegisteredModules=function(){try{var j=[];h._each(h._moduleVersions,function(m,l){j.push({name:m,version:l})});return j}catch(k){h.donkyLogging.errorLog("caught exception in getRegisteredModules() : "+k);return false}};i.prototype._submitLog=function(n,m){var k=h.donkyData.get("lastSubmitLogTimestamp");if(k!==null){var j=h._dateDiff(new Date(k),new Date());if(j.seconds<30){h.donkyLogging.warnLog("_submitLog() submitting too frequently");if(h._isFunction(m)){m({succeeded:false})}}}if(h.donkyAccount.isRegistered()&&!h.donkyAccount._isSuspended()){var l=h.donkyLogging.getLog();if(l!==""){h.donkyNetwork.ajax({data:l,submissionReason:n},"POST",h.donkyNetwork.api.secure,"debuglog",function(o){h.donkyData.set("lastSubmitLogTimestamp",new Date().toISOString());if(o.succeeded){h.donkyLogging.clearLog();if(!o.response.alwaysSubmitErrors){h.donkyLogging.debugLog("_submitLog() spamming - network has set alwaysSubmitErrors to false");var p=h.donkyData.get("configuration");if(p!==null&&p!==undefined){if(p.configurationItems!==undefined){p.configurationItems.AlwaysSubmitErrors="false";h.donkyData.set("configuration",p);h.donkyLogging.debugLog("updated alwaysSubmitErrors to false")}}}if(h._isFunction(m)){m(o)}}})}else{if(h._isFunction(m)){m({succeeded:true})}}}else{if(h._isFunction(m)){m({succeeded:false})}}};i.prototype.submitLog=function(k){try{h._submitLog("ManualRequest",k)}catch(j){h.donkyLogging.errorLog("caught exception in submitLog() : "+j)}};i.prototype.version=function(){return"2.0.0.0"};return i})();(function(){var a=function(){return new DonkyCore()};if(typeof define==="function"&&define.amd){define("donkyCore",["donkyData","donkyAccount","donkyLogging","donkyNetwork"],a)}else{window.donkyCore=a()}}());