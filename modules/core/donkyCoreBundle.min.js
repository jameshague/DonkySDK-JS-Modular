/*!
 * DonkyData JavaScript Library
 *
 * Copyright (C) Donky Networks Ltd. All rights reserved.
 *
 */
;var DonkyData=(function(){var b,c=null;var e={namespace:"donky.net.core."};var d={_get:function(f){return localStorage.getItem(e.namespace+f)},get:function(g){var i=null;var f=this._get(g);try{i=JSON.parse(f)}catch(h){console.log("caught exception in _db.get("+g+"): "+h)}return i},_set:function(f,g){localStorage.setItem(e.namespace+f,g)},set:function(g,h){try{var f=JSON.stringify(h);this._set(g,f)}catch(i){console.log("caught exception in _db.set("+g+"): "+i)}},remove:function(f){localStorage.removeItem(e.namespace+f)},removeAll:function(f){c._each(f,function(g,h){b.remove(h)})},lsTest:function(){var g="test";try{localStorage.setItem(g,g);localStorage.removeItem(g);return true}catch(f){return false}}};function a(f){if(typeof b!="undefined"){return b}if(!d.lsTest()){throw new Error("Local storage not available")}if(f===undefined||f===null){throw new Error("no options specified")}if(f.donkyCore===undefined){throw new Error("donkyCore not specified")}c=f.donkyCore;c._extend(e,f);b=this;return b}a.prototype._getNamespace=function(){return e.namespace};a.prototype._setNamespace=function(f){e.namespace=f};a.prototype.get=function(f){return d.get(f)};a.prototype.set=function(f,g){d.set(f,g)};a.prototype.getString=function(f){return d._get(f)};a.prototype.setString=function(f,g){d._set(f,g)};a.prototype.remove=function(f){d.remove(f)};return a})(); 
/*!
 * DonkyAccount JavaScript Library v1.0.0.0
 *
 * Copyright (C) Dynmark. All rights reserved.
 *
 */
;var DonkyAccount=(function(){var b,c=null;var d={tokenExpiryCheckInterval:10000};var a=null;function e(g){if(typeof b!="undefined"){return b}if(g===undefined||g===null){throw new Error("no options specified")}if(g.donkyCore===undefined){throw new Error("donkyCore not specified")}c=g.donkyCore;b=this;c.subscribeToLocalEvent("DonkyInitialised",function(h){if(a===null){a=setInterval(function(){b._checkToken(function(){})},d.tokenExpiryCheckInterval)}});return b}e.prototype._getBrowserInfo=function(){var h=navigator.userAgent,g,i=h.match(/(opera|chrome|safari|firefox|msie|trident(?=\/))\/?\s*(\d+)/i)||[];if(/trident/i.test(i[1])){g=/\brv[ :]+(\d+)/g.exec(h)||[];return"IE "+(g[1]||"")}if(i[1]==="Chrome"){g=h.match(/\bOPR\/(\d+)/);if(g!=null){return"Opera "+g[1]}}i=i[2]?[i[1],i[2]]:[navigator.appName,navigator.appVersion,"-?"];if((g=h.match(/version\/(\d+)/i))!=null){i.splice(1,1,g[1])}return i.join(" ")};e.prototype._isTokenExpired=function(){var l=c.donkyData.get("accessDetails");if(l!==null&&l!==undefined){var j=false;var h=new Date(l.expiresOn);var i=new Date();if(h>i){var g=Math.abs(i.getTime()-h.getTime());var k=Math.ceil(g/1000);if(k<60){j=true}}else{j=true}return j}else{return true}};e.prototype._checkToken=function(i,g){if((b.isRegistered()&&!b._isSuspended())||g===true){var h=b._isTokenExpired();if(h){this._refreshToken(i)}else{i({succeeded:true})}}else{i({succeeded:false})}};e.prototype._refreshToken=function(j){if(!c._isFunction(j)){throw new Error("resultHandler not supplied")}var i=false;var g=c.donkyNetwork._getSignalRState();switch(g){case c.donkyNetwork.signalrStatuses.initializing:case c.donkyNetwork.signalrStatuses.starting:case c.donkyNetwork.signalrStatuses.started:c.donkyNetwork._stopSignalR();i=true;break;default:break}var h={networkId:c.donkyData.get("networkId"),deviceSecret:c.donkyData.get("secret"),operatingSystem:"Web",sdkVersion:c.version()};c.donkyNetwork.ajax(h,"POST",c.donkyNetwork.api.anonymous,"authentication/gettoken",function(k){if(k.succeeded){c.donkyLogging.debugLog("Succesfully refreshed authorization token");c.donkyData.set("configuration",k.response.configuration);delete k.response.configuration;c.donkyData.set("accessDetails",k.response);c.donkyData.remove("isSuspended");if(i){c.donkyNetwork._startSignalR()}j({succeeded:true})}else{c.donkyLogging.warnLog("Failed to  refresh authorization token");if(k.statusCode===401){c.donkyLogging.warnLog("Can't refresh token - have I been deleted ?");var l=b.getRegistrationDetails();b._register(l,function(m){if(i){c.donkyNetwork._startSignalR()}j(m)})}else{if(k.statusCode===403){c.donkyLogging.warnLog("Can't refresh token - have been suspended");c.donkyData.set("isSuspended",true)}}if(k.statusCode!==401){j({succeeded:false,result:k})}}})};e.prototype._getDeviceId=function(){var g=c.donkyData.get("deviceId");if(g===null){g=c._uuid();c.donkyData.set("deviceId",g);c.donkyData.set("secret",c._uuid())}return g};e.prototype.isRegistered=function(){try{return c.donkyData.get("networkId")!==null}catch(g){c.donkyLogging.errorLog("caught exception in isRegistered() : "+g);return false}};function f(h){var g={id:b._getDeviceId(),secret:c.donkyData.get("secret"),operatingSystem:"Web",operatingSystemVersion:navigator.userAgent,model:b._getBrowserInfo()};return c._extend(h,g)}e.prototype._register=function(g,i){if(!c._isFunction(i)){throw new Error("resultHandler not supplied")}if(g.deviceDetails===undefined){g.deviceDetails={}}var h={device:g.deviceDetails,user:g.userDetails,client:{sdkVersion:c.version(),moduleVersions:c._moduleVersions,appVersion:g.appVersion,currentLocalTime:new Date().toISOString()}};f(h.device);c.donkyLogging.debugLog(JSON.stringify(h));c.donkyNetwork.ajax(h,"POST",c.donkyNetwork.api.anonymous,"registration",function(k){if(k.succeeded){c.donkyData.set("networkId",k.response.networkId);c.donkyData.set("configuration",k.response.accessDetails.configuration);delete k.response.accessDetails.configuration;c.donkyData.set("accessDetails",k.response.accessDetails);var j=h.user!==undefined?h.user:{id:k.response.userId};j.isAnonymous=h.user===undefined;if(j.displayName===undefined){j.displayName=k.response.userId}delete h.device.id;delete h.device.secret;c.donkyData.set("userDetails",j);c.donkyData.set("deviceDetails",h.device);c.donkyData.set("clientDetails",h.client);c.publishLocalEvent({type:"RegistrationChanged",data:{userDetails:j,deviceDetails:h.device}})}i(k)})};e.prototype.getRegistrationDetails=function(){try{return{userDetails:c.donkyData.get("userDetails"),deviceDetails:c.donkyData.get("deviceDetails")}}catch(g){c.donkyLogging.errorLog("caught exception in getRegistrationDetails() : "+g);return null}};e.prototype.getDevice=function(){try{var g=c.donkyData.get("deviceDetails");if(g==null){g={operatingSystem:"Web",operatingSystemVersion:navigator.userAgent,model:b._getBrowserInfo()}}return g}catch(h){c.donkyLogging.errorLog("caught exception in getDevice() : "+h);return null}};e.prototype._getClient=function(){return c.donkyData.get("clientDetails")};e.prototype.updateRegistrationDetails=function(h,g){try{if(!c._isFunction(g)){throw new Error("callback not supplied")}if(h===undefined||h===null){throw new Error("settings not supplied")}if(h.userDetails!==undefined&&h.deviceDetails!==undefined){b._updateRegistrationDetails(h,g)}else{if(h.userDetails!==undefined){b.updateUserDetails(h.userDetails,g)}else{if(h.deviceDetails!==undefined){b.updateDeviceDetails(h.deviceDetails,g)}else{throw new Error("neither userDetails or deviceDetails specified - must specify at least 1")}}}}catch(i){c.donkyLogging.errorLog("caught exception in updateRegistrationDetails() : "+i)}};e.prototype.replaceRegistration=function(h,g){try{c.donkyNetwork.synchronise(function(){b._register(h,function(j){g(j)})})}catch(i){c.donkyLogging.errorLog("caught exception in replaceRegistration() : "+i)}};e.prototype._updateRegistrationDetails=function(h,i){var g={user:h.userDetails,device:h.deviceDetails};f(g.device);c.donkyNetwork.ajax(g,"PUT",c.donkyNetwork.api.secure,"registration",function(j){if(j.succeeded){c.donkyData.set("userDetails",g.user);delete g.device.id;delete g.device.secret;c.donkyData.set("deviceDetails",g.device)}i(j)})};e.prototype.updateUserDetails=function(i,h){try{if(i===undefined){throw new Error("userDetails not supplied")}if(!c._isFunction(h)){throw new Error("callback not supplied")}c.donkyNetwork.ajax(i,"PUT",c.donkyNetwork.api.secure,"registration/user",function(j){if(j.succeeded){c.donkyData.set("userDetails",i)}h(j)})}catch(g){c.donkyLogging.errorLog("caught exception in updateUserDetails() : "+g)}};e.prototype.updateDeviceDetails=function(g,i){try{if(g===undefined){throw new Error("deviceDetails not supplied")}if(!c._isFunction(i)){throw new Error("callback not supplied")}f(g);c.donkyNetwork.ajax(g,"PUT",c.donkyNetwork.api.secure,"registration/device",function(j){if(j.succeeded){delete g.id;delete g.secret;c.donkyData.set("deviceDetails",g)}i(j)})}catch(h){c.donkyLogging.errorLog("caught exception in updateDeviceDetails() : "+h)}};e.prototype._updateClient=function(g,i){try{if(!c._isFunction(i)){throw new Error("callback not supplied")}c.donkyNetwork.ajax(g,"PUT",c.donkyNetwork.api.secure,"registration/client",function(j){if(j.succeeded){c.donkyData.set("clientDetails",g)}i(j)})}catch(h){c.donkyLogging.errorLog("caught exception in _updateClient() : "+h)}};e.prototype._isSuspended=function(){var g=c.donkyData.get("isSuspended");return g!==null?g:false};e.prototype.getTags=function(h){try{if(!c._isFunction(h)){throw new Error("callback not supplied")}c.donkyNetwork.ajax(null,"GET",c.donkyNetwork.api.secure,"registration/user/tags",function(i){h(i)})}catch(g){c.donkyLogging.errorLog("caught exception in getTags() : "+g)}};e.prototype.putTags=function(g,i){try{if(!c._isFunction(i)){throw new Error("callback not supplied")}c.donkyNetwork.ajax(g,"PUT",c.donkyNetwork.api.secure,"registration/user/tags",function(j){i(j)})}catch(h){c.donkyLogging.errorLog("caught exception in putTags() : "+h)}};return e})(); 
/*!
 * DonkyLogging JavaScript Library
 *
 * Copyright (C) Donky Networks Ltd. All rights reserved.
 *
 */
;var DonkyLogging=(function(){var a={Fatal:0,Error:1,Warn:2,Info:3,Debug:4};var h={0:"Fatal",1:"Error",2:"Warn",3:"Info",4:"Debug"};var b;var g={logLevel:a.Debug,maxSize:1024*1,key:"rollingLogfile"};var d=null;var c=("0000"+(Math.random()*Math.pow(36,4)<<0).toString(36)).slice(-4);function f(m,l,i){if(m<=g.logLevel){var k="["+c+"] : "+new Date().toJSON()+" ["+h[m]+"] : "+l+(i!==undefined?(" : "+JSON.stringify(i)):"")+"\r\n";switch(m){case a.Fatal:case a.Error:console.error(k);break;case a.Warn:console.warn(k);break;default:console.log(k);break}var j=d.donkyData.getString(g.key);if(j!==null){j+=k}else{j=k}if(j.length>g.maxSize){j=j.substring(k.length)}d.donkyData.setString(g.key,j);d.publishLocalEvent({type:"LogMessage",data:{logLevel:m,message:l,args:i}})}}function e(i){if(typeof b!="undefined"){return b}if(i===undefined||i===null){throw new Error("no options specified")}if(i.donkyCore===undefined){throw new Error("No donkyCore specified")}d=i.donkyCore;b=this;return b}e.prototype._submitAutomaticErrorLog=function(){var i=d.donkyData.get("configuration");if(i!==null&&i!==undefined){if(i.configurationItems!==undefined&&i.configurationItems.AlwaysSubmitErrors=="true"){d._submitLog("AutomaticByDevice")}}};e.prototype.fatalLog=function(j,i){if(a.Fatal<=g.logLevel){f(a.Fatal,j,i);d._submitLog("AutomaticByDevice")}};e.prototype.errorLog=function(j,i){if(a.Error<=g.logLevel){f(a.Error,j,i);d._submitLog("AutomaticByDevice")}};e.prototype.warnLog=function(j,i){if(a.Warn<=g.logLevel){f(a.Warn,j,i)}};e.prototype.infoLog=function(j,i){if(a.Info<=g.logLevel){f(a.Info,j,i)}};e.prototype.debugLog=function(j,i){if(a.Debug<=g.logLevel){f(a.Debug,j,i)}};e.prototype.getLog=function(){return d.donkyData.getString(g.key)};e.prototype.clearLog=function(){return d.donkyData.remove(g.key)};e.prototype.logLevel=a;e.prototype._getLogLevel=function(){return g.logLevel};e.prototype._setLogLevel=function(i){if(i>=a.Fatal&&i<=a.Debug){g.logLevel=i}};return e})(); 
/*!
 * DonkyNetwork JavaScript Library
 *
 * Copyright (C) Donky Networks Ltd. All rights reserved.
 *
 */
;var DonkyNetwork=(function(){var m={checkSynchroniseInterval:1000*10,maxSecondsWithoutSynchronize:5*60,retrySchedule:[5000,5000,30000,30000,60000,120000,300000,300000,300000,300000,300000,300000,300000,300000,300000,600000,600000,600000,600000,600000,600000,900000]};var a;var h=null;var f=0;b.prototype.api={anonymous:"client-api.mobiledonky.com/api/",secure:"client-secure-api-northeurope.mobiledonky.com/api/"};var d={initializing:0,starting:1,started:2,stopping:3,stopped:4,error:5};b.prototype.signalrStatuses=d;var p=false;var o=undefined;var c=false;var r=undefined;var s=undefined;var k=false;var l=d.stopped;var i=null;var g=null;var j=false;var n=true;var q=null;function e(){if(h.donkyAccount.isRegistered()&&!h.donkyAccount._isSuspended()){var t=h.donkyData.get("lastSynchroniseTime");if(t!==null){var u=new Date(t);var v=h._dateDiff(u,new Date());if(v.seconds>m.maxSecondsWithoutSynchronize){a.synchronise()}}else{a.synchronise()}}}function b(u){if(typeof a!="undefined"){return a}if(u===undefined||u===null){throw new Error("no options specified")}if(u.donkyCore===undefined){throw new Error("donkyCore not specified")}h=u.donkyCore;if(window.jQuery===undefined){throw new Error("jQuery not found")}if(h._versionCompare($.fn.jquery,"1.7")<0){throw new Error("jQuery varsion too old - require minimum version of 1.7")}if(window.$.signalR===undefined){throw new Error("jQuery not found")}if(h._versionCompare(window.$.signalR.version,"2.2.0")<0){throw new Error("signalR varsion too old - require minimum version of 2.2.0")}a=this;if(n){h.subscribeToLocalEvent("RegistrationChanged",function(x){if(l==d.initializing||l==d.starting||l==d.started){a._stopSignalR(function(){a._startSignalR()})}});h.subscribeToLocalEvent("DonkyInitialised",function(x){if(!k){a._initSignalR()}else{if(l==d.stopped){a._startSignalR()}}if(q===null){q=setInterval(function(){e()},m.checkSynchroniseInterval)}})}var w=h.donkyData.get("configuration");if(w!==null&&w!==undefined&&w.configurationItems!==undefined){if(typeof w.configurationItems.DeviceCommsConnectionRetrySchedule=="string"){var t=w.configurationItems.DeviceCommsConnectionRetrySchedule.split("|");var v=[];h._each(t,function(y,A){var C=A.split(",");if(C.length==2){var x=parseInt(C[0]);var B=C[1]==="*"?1:parseInt(C[1]);for(var z=0;z<B;z++){v.push(x*1000)}}});m.retrySchedule=v}if(n&&typeof w.configurationItems.MaxMinutesWithoutNotificationExchange=="string"){m.maxSecondsWithoutSynchronize=parseInt(w.configurationItems.MaxMinutesWithoutNotificationExchange)*60}}return a}b.prototype.ajax=function(v,u,t,y,x){try{a._ajax(v,u,t,y,function(A){if(A.succeeded){f=0;x(A)}else{var z=true;if(h.donkyAccount._isSuspended()||!h.donkyAccount.isRegistered()){z=false}else{switch(A.statusCode){case 401:if(y!=="authentication/gettoken"){z=false;h.donkyAccount._refreshToken(function(B){if(B.succeeded){h.donkyLogging.debugLog("Retrying ajax call after getting a new token");a.ajax(v,u,t,y,x)}})}else{z=false}break;case 400:case 403:case 404:z=false;default:break}}if(z){h.donkyLogging.debugLog("Retrying ajax call in "+m.retrySchedule[f]+" ms - retryCounter = "+f);setTimeout(function(){a.ajax(v,u,t,y,x)},m.retrySchedule[f]);if(f<m.retrySchedule.length-1){f++}}else{x(A)}}})}catch(w){h.donkyLogging.errorLog("caught exception in ajax() : "+w);x({succeeded:false,statusCode:-1})}};b.prototype._ajax=function(x,A,z,t,B){var v={donkyClientSystemIdentifier:"DonkyWebModularSdk"};if(z===a.api.secure){v.authorization=h.donkyNetwork._getAuthorizationHeader()}else{v.apiKey=h.donkyData.get("apiKey")}var y=h.donkyData.get("environment");var u=h.donkyData.get("scheme");var w=$.ajax({url:u+y+z+t,type:A,beforeSend:function(C){if(v!==null){h._each(v,function(D,E){C.setRequestHeader(D,E)})}},contentType:"application/json",data:x!==null?JSON.stringify(x):undefined,dataType:"json"}).done(function(C){if(C!==null&&C!==undefined){h.donkyLogging.debugLog(JSON.stringify(C))}B({succeeded:true,response:C})}).fail(function(F,C,H){if(F.readyState==4){var I;var D=null;var E=F.statusCode();switch(E.status){case 400:try{D=JSON.parse(E.responseText)}catch(G){h.donkyLogging.warnLog("failed to parse responseText: "+E.responseText)}I=A+" to  "+z+t+" returned a "+E.status+" (Bad request)\nrequest: "+JSON.stringify(x)+"\nheaders: "+JSON.stringify(v)+"\nresponse: "+JSON.stringify(D);h.donkyLogging.warnLog(I);break;default:I=A+" to  "+z+t+" returned a "+E.status+"\nrequest: "+JSON.stringify(x)+"\nheaders: "+JSON.stringify(v)+"\nresponse: "+E.responseText;h.donkyLogging.warnLog(I);break}B({succeeded:false,response:D,statusCode:E.status})}else{I=A+" to  "+z+t+" failed ("+C+")\nrequest: "+JSON.stringify(x)+"\nheaders: "+JSON.stringify(v);h.donkyLogging.warnLog(I);B({succeeded:false,statusCode:-1})}})};b.prototype._initSignalR=function(){if(i==null){l=d.initializing;var t=h.donkyData.get("accessDetails");i=$.hubConnection(t.signalRUrl,{useDefaultPath:false});i.qs={access_token:t.accessToken};if(h.donkyLogging._getLogLevel()>=h.donkyLogging.logLevel.Info){i.logging=true}i.stateChanged(function(u){switch(u.newState){case $.signalR.connectionState.connecting:h.donkyLogging.debugLog("The server is connecting");l=d.starting;break;case $.signalR.connectionState.connected:h.donkyLogging.debugLog("The server is connected");l=d.started;break;case $.signalR.connectionState.reconnecting:h.donkyLogging.debugLog("The server is reconnecting");l=d.starting;break;case $.signalR.connectionState.disconnected:h.donkyLogging.debugLog("The server is disconnected");l=d.stopped;break}});g=i.createHubProxy("NetworkHub");g.on("push",function(u){h.donkyLogging.debugLog("Push was called with notifications: "+JSON.stringify(u));h._processServerNotifications(u);if(n){a._synchroniseOverSignalR()}else{a._synchronizeOverREST()}});k=true;a._startSignalR()}else{h.donkyLogging.warnLog("_signalR.init() called twice")}};b.prototype._isSignalRStarted=function(){return l==d.started};b.prototype._getSignalRState=function(){return l};b.prototype._useSignalR=function(t){n=t};b.prototype._startSignalR=function(u){if(i!=null){var t=h.donkyData.get("accessDetails");switch(l){case d.initializing:case d.stopped:i.qs={access_token:t.accessToken};l=d.starting;i.start().done(function(){l=d.started;if(h._isFunction(u)){u()}a._synchroniseOverSignalR(function(){h.publishLocalEvent({type:"SignalRStarted",data:{}});if(s!==undefined){h.donkyLogging.debugLog("syncWhenStartingCallback registered, calling ...");s();s=undefined}if(p===true){h.donkyLogging.debugLog("Entered the started state and found a stop request. stopping ...");p=false;a._stopSignalR(o);o=undefined}})}).fail(function(v){l=d.stopped;h.donkyLogging.warnLog("Connection error: "+v);a._synchronizeOverREST(function(){if(s!==undefined){h.donkyLogging.debugLog("syncWhenStartingCallback registered, calling ...");s();s=undefined}})});break;case d.started:if(h._isFunction(u)){u()}h.donkyLogging.warnLog("_startSignalR() called when already started");break;case d.starting:h.donkyLogging.warnLog("_startSignalR() called when starting");break;case d.stopping:h.donkyLogging.debugLog("_startSignalR() called when stopping - requesting a start when stopped");c=true;r=u;break;default:h.donkyLogging.errorLog("Unknown signalR status: "+l);break}}else{h.donkyLogging.warnLog("_startSignalR() called when not initialized")}};b.prototype._stopSignalR=function(t){if(i!=null){switch(l){case d.started:i.stop();l=d.stopped;h.publishLocalEvent({type:"SignalRStopped",data:{}});if(h._isFunction(t)){t()}if(c===true){h.donkyLogging.debugLog("Entered the stopped state and found a start request. starting ...");c=false;a._startSignalR(r);r=undefined}break;case d.stopped:h.donkyLogging.warnLog("_stopSignalR() called when already stopped");if(h._isFunction(t)){t()}break;case d.stopping:h.donkyLogging.warnLog("_stopSignalR() called when already stopping");break;case d.starting:case d.initializing:h.donkyLogging.debugLog("_stopSignalR() called when initializing / starting  - requesting a stop when started");p=true;o=t;break;default:h.donkyLogging.errorLog("Unknown signalR status: "+l);break}}else{h.donkyLogging.warnLog("_stopSignalR() called when not initialized")}};b.prototype._synchroniseOverSignalR=function(u){if(l==d.started){var t=h._getClientNotificationsToExecute();h.donkyLogging.debugLog("invoking synchronise: "+JSON.stringify(t));j=true;h._processPendingClientNotifications(t);g.invoke("synchronise",t).done(function(v){j=false;h.donkyLogging.infoLog("Call to synchronise succeeded, result was: "+JSON.stringify(v));h._processServerNotifications(v.serverNotifications);if(h._isArray(v.failedClientNotifications)&&v.failedClientNotifications.length>0){h.donkyLogging.warnLog("Exchange returnewd some failed client notifications: "+JSON.stringify(v.failedClientNotifications))}h.donkyData.remove("ExecutingClientNotifications");if(h._isPendingNotifications()){h.donkyLogging.infoLog("_processServerNotifications() generated some pending client notifications, sending now ...");a._synchroniseOverSignalR(u)}else{if(h._isFunction(u)){u({succeeded:true,response:v})}}}).fail(function(v){j=false;l=d.stopped;h.donkyLogging.errorLog("Call to synchronise failed: "+v);if(h._isFunction(u)){u({succeeded:false})}})}else{h.donkyLogging.warnLog("signalR not initialized so can't synchronise over this channel")}};b.prototype._synchronizeOverREST=function(u){if(j){h.donkyLogging.warnLog("synchronize called when already synchronizing");return}var t={clientNotifications:h._getClientNotificationsToExecute(),isBackground:true};j=true;h._processPendingClientNotifications(t.clientNotifications);this.ajax(t,"POST",this.api.secure,"notification/synchronise",function(v){j=false;if(v.succeeded){h.donkyLogging.debugLog("Call to synchronise succeeded, result was: "+JSON.stringify(v));h._processServerNotifications(v.response.serverNotifications);if(h._isArray(v.response.failedClientNotifications)&&v.response.failedClientNotifications.length>0){h.donkyLogging.warnLog("Exchange returnewd some failed client notifications: "+JSON.stringify(v.response.failedClientNotifications))}h.donkyData.remove("ExecutingClientNotifications");if(h._isPendingNotifications()){a._synchronizeOverREST(u)}else{if(h._isFunction(u)){u(v)}}}else{j=false;h.donkyLogging.errorLog("Call to synchronise failed, result was: "+JSON.stringify(v));if(h._isFunction(u)){u(v)}}})};b.prototype.synchronise=function(x){try{h.donkyData.set("lastSynchroniseTime",new Date().valueOf());var w=h.donkyData.get("configuration");var v=parseInt(w.configurationItems.SignalRMaxMessageSizeBytes);var t=h._getPendingNotificationsLength();if(t<v&&n){if(l==d.initializing||l==d.starting){s=x}else{if(l==d.started){a._synchroniseOverSignalR(x)}else{a._synchronizeOverREST(x)}}}else{a._synchronizeOverREST(x)}}catch(u){h.donkyLogging.errorLog("caught exception in synchronise() : "+u);x()}};b.prototype.getServerNotification=function(v,t){try{if(!h._isFunction(t)){throw new Error("resultHandler not supplied")}this.ajax(null,"GET",this.api.secure,"notification/"+v,function(w){if(w.succeeded){t(w.response)}else{h.donkyLogging.warnLog("Failed to get Server Notification: "+v);t(null)}})}catch(u){h.donkyLogging.errorLog("caught exception in getServerNotification() : "+u);t(null)}};b.prototype._getAuthorizationHeader=function(){var t=h.donkyData.get("accessDetails");return t!==null?t.tokenType+" "+t.accessToken:""};return b})(); 
/*!
 * DonkyCore JavaScript Library
 *
 * Copyright (C) Donky Networks Ltd. All rights reserved.
 *
 */
;var DonkyCore=(function(){var i;var h=[];var c=[];var f=[];var e=[];var a={};j.prototype._extend=function(){for(var l=1;l<arguments.length;l++){for(var k in arguments[l]){if(arguments[l].hasOwnProperty(k)){arguments[0][k]=arguments[l][k]}}}return arguments[0]};j.prototype._isFunction=function(k){var l={};return k&&l.toString.call(k)==="[object Function]"};j.prototype._isArray=function(k){return Object.prototype.toString.call(k)==="[object Array]"};j.prototype._each=function(o,p){var n,l=0,m=o.length,k=i._isArray(o);if(k){for(;l<m;l++){n=p.call(o[l],l,o[l]);if(n===false){break}}}else{for(l in o){n=p.call(o[l],l,o[l]);if(n===false){break}}}return o};j.prototype._uuid=function(){var k="xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(n){var m=Math.random()*16|0,l=n=="x"?m:(m&3|8);return l.toString(16)});return k};function j(){if(typeof i!="undefined"){return i}i=this;i.registerModule({name:"donkyCore",version:i.version()});j.prototype.donkyData=new DonkyData({donkyCore:i});j.prototype.donkyLogging=new DonkyLogging({donkyCore:i});j.prototype.donkyNetwork=new DonkyNetwork({donkyCore:i});j.prototype.donkyAccount=new DonkyAccount({donkyCore:i});i.subscribeToDonkyNotifications({name:"donkyCore",version:i.version()},{notificationType:"TransmitDebugLog",handler:function(k){i.donkyLogging.debugLog("TransmitDebugLog : "+JSON.stringify(k));i._queueAcknowledgement(k,"Delivered");i.submitLog()}},true);i.subscribeToLocalEvent("DonkyInitialised",function(k){i._updateClientInfoIfChanged()});return i}j.prototype._dateDiff=function(k,m){var l=m-k;if(isNaN(l)){return NaN}return{milliSeconds:l,seconds:Math.floor(l/1000),minutes:Math.floor(l/(1000*60)),hours:Math.floor(l/(1000*60*60)),days:Math.floor(l/(1000*60*60*24))}};j.prototype._versionCompare=function(r,q,k){var p=k&&k.lexicographical,o=r.split("."),m=q.split(".");function n(s){return(p?/^\d+[A-Za-z]*$/:/^\d+$/).test(s)}if(!o.every(n)||!m.every(n)){return NaN}while(o.length<m.length){o.push("0")}while(m.length<o.length){m.push("0")}if(!p){o=o.map(Number);m=m.map(Number)}for(var l=0;l<o.length;++l){if(m.length==l){return 1}if(o[l]==m[l]){continue}else{if(o[l]>m[l]){return 1}else{return -1}}}if(o.length!=m.length){return -1}return 0};j.prototype._isPendingNotifications=function(){var k=i.donkyData.get("PendingClientNotifications");return k!==null&&k!==undefined&&i._isArray(k)&&k.length>0};j.prototype._getPendingNotificationsLength=function(){var l=i.donkyData.getString("PendingClientNotifications");var k=0;if(l!==null&&l!==undefined){k=l.length}return k};j.prototype._getClientNotificationsToExecute=function(){var k=i.donkyData.get("PendingClientNotifications");var m=i.donkyData.get("ExecutingClientNotifications");var l=[];if(m!==null){l=m}if(k!==null){l=l.concat(k)}i.donkyData.set("ExecutingClientNotifications",l);i.donkyData.remove("PendingClientNotifications");i.donkyLogging.infoLog("_getClientNotificationsToExecute() : "+JSON.stringify(l));return l};j.prototype._queueAcknowledgement=function(m,k){var l={type:"Acknowledgement",acknowledgementDetail:{serverNotificationId:m.id,result:k,sentTime:new Date().toISOString(),type:m.type,customNotificationType:m.type==="Custom"?m.data.customType:undefined}};i.queueClientNotifications(l)};j.prototype._processServerNotifications=function(k){i._each(k,function(m,q){var n=q.type=="Custom";var p=false;var o=false;var l=n?c:h;if(n){i._queueAcknowledgement(q,"Delivered");p=true}i._each(l,function(r,s){try{if(((n&&s.notificationType==q.data.customType)||s.notificationType==q.type)&&!s.removed){s.handler(q);p=true;if(s.autoAcknowledge){o=true}}}catch(t){i.donkyLogging.errorLog("Caught exception processing Message: "+q.type);p=false}});if(!p){i.donkyLogging.warnLog("Message: "+q.type+" not handled")}if(!n&&(!p||o)){i._queueAcknowledgement(q,p?"Delivered":"DeliveredNoSubscription")}})};j.prototype._processPendingClientNotifications=function(k){i._each(k,function(l,m){i._each(f,function(n,o){if(o.notificationType==m.type&&!o.removed){o.handler(m)}})})};function g(n){var m=true;if(n.content.data!==null&&n.content.data!==undefined){var p=i.donkyData.get("configuration");var k=parseInt(p.configurationItems.CustomContentMaxSizeBytes);var o=parseInt(p.configurationItems.SignalRMaxMessageSizeBytes);var l=JSON.stringify(n.content.data).length;if(l>o){m=false;i.donkyLogging.debugLog("ContentNotification size too large ("+l+"): max size = "+k)}else{i.donkyLogging.debugLog("ContentNotification size ok ("+l+"): max size = "+k)}}return m}j.prototype.queueContentNotifications=function(m){try{var l=[];var k=[];if(i._isArray(m)){i._each(m,function(o,p){if(g(p)){l.push({type:"SendContent",definition:p})}else{k.push({type:"SendContent",definition:p})}})}else{if(g(m)){l.push({type:"SendContent",definition:m})}else{k.push({type:"SendContent",definition:m})}}if(l.length>0){i.queueClientNotifications(l)}if(k.length>0){return{succeeded:false,failedClientNotifications:k,reason:"The following notifications are too large and have not been processsed"}}else{return{succeeded:true}}}catch(n){i.donkyLogging.errorLog("caught exception in queueCustomNotifications() : "+n)}};j.prototype.sendContentNotifications=function(k,m){try{var l=i.queueContentNotifications(k);if(!l.succeeded){i.donkyLogging.debugLog(l.failedClientNotifications.length+" invalid content notification(s)")}i.donkyNetwork.synchronise(function(o){if(i._isFunction(m)){if(!l.succeeded){o.succeeded=false;i._each(l.failedClientNotifications,function(p,q){o.response.failedClientNotifications.push({notification:{type:"SendContent"},validationFailures:[{property:"data",details:"The data is too large ",failureCode:12004,failureKey:"CustomDataTooLong",notification:q}],failureReason:"ValidationFailure"})})}m(o)}})}catch(n){i.donkyLogging.errorLog("caught exception in sendContentNotifications() : "+n)}};j.prototype.createContentNotificationForSpecifiedUsers=function(o,n,k){try{var m={audience:{type:"SpecifiedUsers",users:[]},content:{type:"Custom",customType:n,data:k},filters:[]};if(i._isArray(o)){i._each(o,function(q,p){m.audience.users.push({userId:p})})}else{m.audience.users.push({userId:o})}return m}catch(l){i.donkyLogging.errorLog("caught exception in formatContentNotification() : "+l);return null}};j.prototype.queueClientNotifications=function(l){try{i.donkyLogging.infoLog("queueClientNotification: "+JSON.stringify(l));var k=i.donkyData.get("PendingClientNotifications");if(k===null||k===undefined){k=[]}if(i._isArray(l)){i._each(l,function(n,o){k.push(o)})}else{k.push(l)}i.donkyData.set("PendingClientNotifications",k)}catch(m){i.donkyLogging.errorLog("caught exception in queueClientNotifications() : "+m)}};j.prototype._compareDictionaries=function(l,k){var m=true;if(l===undefined&&k===undefined){}else{if(l!==undefined&&k!==undefined){if(Object.keys(l).length==Object.keys(k).length){i._each(l,function(n,o){if(o!=k[n]){m=false}return m})}else{m=false}}else{if(l!==undefined||k!==undefined){m=false}}}return m};j.prototype._updateClientInfoIfChanged=function(){var k=i.donkyAccount._getClient();if(k!==null&&k!==undefined){if(!i._compareDictionaries(k.moduleVersions,i._moduleVersions)){i.donkyLogging.debugLog("moduleVersions different - updating network ...");k.moduleVersions=i._moduleVersions;k.currentLocalTime=new Date().toISOString();i.donkyAccount._updateClient(k,function(l){if(l.succeeded){i.donkyLogging.debugLog("moduleVersions succesfully updated")}else{i.donkyLogging.errorLog("Failed to update moduleVersions")}})}}};j.prototype._hasUserDetailsChanged=function(l){var k=i.donkyAccount.getRegistrationDetails();return(l.id!=k.userDetails.id||l.displayName!=k.userDetails.displayName||l.firstName!=k.userDetails.firstName||l.lastName!=k.userDetails.lastName||l.emailAddress!=k.userDetails.emailAddress||l.countryCode!=k.userDetails.countryCode||l.phoneNumber!=k.userDetails.phoneNumber||!i._compareDictionaries(l.additionalProperties,k.userDetails.additionalProperties))};j.prototype._hasDeviceDetailsChanged=function(k){var l=i.donkyAccount.getRegistrationDetails();return(k.type!=l.deviceDetails.type||k.name!=l.deviceDetails.name||!i._compareDictionaries(k.additionalProperties,l.deviceDetails.additionalProperties))};j.prototype._initialize=function(l){if(l.userDetails!==undefined||l.deviceDetails!==undefined){var k={};if(l.deviceDetails!==undefined&&i._hasDeviceDetailsChanged(l.deviceDetails)){k.deviceDetails=l.deviceDetails}if(l.userDetails!==undefined&&i._hasUserDetailsChanged(l.userDetails)){k.userDetails=l.userDetails}if(k.deviceDetails!==undefined||k.userDetails!==undefined){i.donkyAccount.updateRegistrationDetails(k,function(m){if(m.succeeded){i.publishLocalEvent({type:"DonkyInitialised",data:{}})}l.resultHandler(m)})}else{i.publishLocalEvent({type:"DonkyInitialised",data:{}});l.resultHandler({succeeded:true})}}else{i.publishLocalEvent({type:"DonkyInitialised",data:{}});l.resultHandler({succeeded:true})}};j.prototype.initialise=function(k){try{if(k===undefined||k===null){throw new Error("no options specified")}if(k.apiKey===undefined){i.donkyLogging.warnLog("No apiKey specified");throw new Error("apiKey not specified")}if(!i._isFunction(k.resultHandler)){i.donkyLogging.warnLog("No ResultHandler specified");throw new Error("resultHandler not specified")}var m=i.donkyData.get("apiKey");if(m!==null&&m!==k.apiKey){i.donkyData.remove("networkId")}if(k.useSignalR===false){i.donkyNetwork._useSignalR(false)}else{i.donkyNetwork._useSignalR(true)}i.donkyData.set("apiKey",k.apiKey);i.donkyData.set("environment",k.environment!==undefined?k.environment:"");i.donkyData.set("scheme",k.scheme!==undefined?k.scheme:"https://");if(!i.donkyAccount.isRegistered()){i.donkyAccount._register(k,function(n){if(n.succeeded){i.publishLocalEvent({type:"DonkyInitialised",data:{}})}k.resultHandler(n)})}else{i.donkyAccount._checkToken(function(n){if(n.succeeded){i._initialize(k)}else{k.resultHandler(n)}},true)}}catch(l){i.donkyLogging.errorLog("caught exception in initialise() : "+l);if(k!==undefined&&i._isFunction(k.resultHandler)){k.resultHandler({succeeded:false})}}};function b(l,n,k,m){if(i._isArray(n)){i._each(n,function(o,p){p.autoAcknowledge=m===undefined?true:m;k.push(p)})}else{n.autoAcknowledge=m===undefined?true:m;k.push(n)}i.registerModule(l)}function d(l,n,k){var m=i._isArray(n)?n:[n];i._each(m,function(o,r){for(var p=k.length-1;p>=0;p--){var q=k[p];if(q.notificationType===r.notificationType&&q.handler===r.handler){q.removed=true}}})}j.prototype.subscribeToDonkyNotifications=function(k,n,m){try{b(k,n,h,m)}catch(l){i.donkyLogging.errorLog("caught exception in subscribeToDonkyNotifications() : "+l)}};j.prototype.subscribeToContentNotifications=function(k,m){try{b(k,m,c)}catch(l){i.donkyLogging.errorLog("caught exception in subscribeToContentNotifications() : "+l)}};j.prototype.unsubscribeFromContentNotifications=function(k,m){try{d(k,m,c)}catch(l){i.donkyLogging.errorLog("caught exception in unsubscribeFromContentNotifications() : "+l)}};j.prototype.unsubscribeFromDonkyNotifications=function(k,m){try{d(k,m,h)}catch(l){i.donkyLogging.errorLog("caught exception in unsubscribeFromDonkyNotifications() : "+l)}};j.prototype.subscribeToOutboundNotifications=function(k,m){try{if(i._isArray(m)){i._each(m,function(n,o){f.push(o)})}else{f.push(m)}i.registerModule(k)}catch(l){i.donkyLogging.errorLog("caught exception in subscribeToOutboundNotifications() : "+l)}};j.prototype.unsubscribeFromOutboundNotifications=function(k,m){try{d(k,m,f)}catch(l){i.donkyLogging.errorLog("caught exception in unsubscribeFromOutboundNotifications() : "+l)}};j.prototype.publishLocalEvent=function(k){try{var m=false;i._each(e,function(o,n){if(n.eventType==k.type&&n.removed!==true){try{n.handler(k);m=true}catch(p){i.donkyLogging.warnLog("caught exception in local event handler() : "+p)}}});if(!m){}}catch(l){i.donkyLogging.warnLog("caught exception in publishLocalEvent() : "+l)}};j.prototype.subscribeToLocalEvent=function(k,l){try{e.push({eventType:k,handler:l})}catch(m){i.donkyLogging.errorLog("caught exception in subscribeToLocalEvent() : "+m)}};j.prototype.unsubscribeFromLocalEvent=function(l,n){try{var p=false;for(var k=e.length-1;k>=0;k--){var m=e[k];if(m.eventType===l&&m.handler===n){m.removed=true;p=true;i.donkyLogging.debugLog("unsubscribeToEvent() succeeded")}}if(!p){i.donkyLogging.warnLog("unsubscribeToEvent() failed")}}catch(o){i.donkyLogging.errorLog("caught exception in unsubscribeFromLocalEvent() : "+o)}};j.prototype.formatAssetUrl=function(l){try{var m=i.donkyData.get("configuration");return m.configurationItems.AssetDownloadUrlFormat.replace("{0}",l)}catch(k){i.donkyLogging.errorLog("caught exception in formatAssetUrl() : "+k);return null}};j.prototype.formatAssetDownloadUrl=function(n,l){try{var o=i.donkyData.get("configuration");var k=o.configurationItems.AssetDownloadNamedFileUrlFormat.replace("{0}",n);return k.replace("{1}",l)}catch(m){i.donkyLogging.errorLog("caught exception in formatAssetDownloadUrl() : "+m);return null}};j.prototype.registerService=function(l,k){try{if(a[l]!==undefined){i.donkyLogging.warnLog("registerService("+l+") - overwriting an existing instance")}else{i.donkyLogging.debugLog("registerService("+l+")")}a[l]=k}catch(m){i.donkyLogging.errorLog("caught exception in registerService() : "+m)}};j.prototype.getService=function(k){try{if(a[k]!==undefined){i.donkyLogging.debugLog("getService("+k+")");return a[k]}else{i.donkyLogging.warnLog("getService("+k+") - service not available");return null}}catch(l){i.donkyLogging.errorLog("caught exception in getService() : "+l);return null}};j.prototype.unregisterService=function(k){try{if(a[k]!==undefined){i.donkyLogging.debugLog("unregisterService("+k+")");delete a[k]}else{i.donkyLogging.warnLog("unregisterService("+k+") - service not available")}}catch(l){i.donkyLogging.errorLog("caught exception in unregisterService() : "+l)}};j.prototype._moduleVersions={};j.prototype.registerModule=function(k){try{if(i._moduleVersions[k.name]!==undefined){if(i._moduleVersions[k.name]!=k.version){i._moduleVersions[k.name]=k.version}}else{i._moduleVersions[k.name]=k.version}}catch(l){i.donkyLogging.errorLog("caught exception in registerModule() : "+l)}};j.prototype.isModuleRegistered=function(k,l){try{var n=false;if(i._moduleVersions[k]!==undefined){if(l===undefined){n=true}else{n=i._versionCompare(l,i._moduleVersions[k])<=0}}return n}catch(m){i.donkyLogging.errorLog("caught exception in isModuleRegistered() : "+m);return false}};j.prototype.getRegisteredModules=function(){try{var k=[];i._each(i._moduleVersions,function(n,m){k.push({name:n,version:m})});return k}catch(l){i.donkyLogging.errorLog("caught exception in getRegisteredModules() : "+l);return false}};j.prototype._submitLog=function(o,n){var l=i.donkyData.get("lastSubmitLogTimestamp");if(l!==null){var k=i._dateDiff(new Date(l),new Date());if(k.seconds<30){i.donkyLogging.warnLog("_submitLog() submitting too frequently");if(i._isFunction(n)){n({succeeded:false})}}}if(i.donkyAccount.isRegistered()&&!i.donkyAccount._isSuspended()){var m=i.donkyLogging.getLog();if(m!==""){i.donkyNetwork.ajax({data:m,submissionReason:o},"POST",i.donkyNetwork.api.secure,"debuglog",function(p){i.donkyData.set("lastSubmitLogTimestamp",new Date().toISOString());if(p.succeeded){i.donkyLogging.clearLog();if(!p.response.alwaysSubmitErrors){i.donkyLogging.debugLog("_submitLog() spamming - network has set alwaysSubmitErrors to false");var q=i.donkyData.get("configuration");if(q!==null&&q!==undefined){if(q.configurationItems!==undefined){q.configurationItems.AlwaysSubmitErrors="false";i.donkyData.set("configuration",q);i.donkyLogging.debugLog("updated alwaysSubmitErrors to false")}}}if(i._isFunction(n)){n(p)}}})}else{if(i._isFunction(n)){n({succeeded:true})}}}else{if(i._isFunction(n)){n({succeeded:false})}}};j.prototype.submitLog=function(l){try{i._submitLog("ManualRequest",l)}catch(k){i.donkyLogging.errorLog("caught exception in submitLog() : "+k)}};j.prototype.version=function(){return"2.0.0.1"};return j})();(function(){var a=function(){return new DonkyCore()};if(typeof define==="function"&&define.amd){define("donkyCore",["donkyData","donkyAccount","donkyLogging","donkyNetwork"],a)}else{window.donkyCore=a()}}());